import json
import sys
from pathlib import Path

REPO_ROOT = Path(__file__).parents[1]
DOCS_SIDEBAR = REPO_ROOT / "docs" / "sidebar.json"
DOCS_DIR = REPO_ROOT / "docs"


def get_all_docs_files():
    files = []
    for ext in (".md", ".mdx", ".jsx", ".md.tmpl"):
        for f in DOCS_DIR.rglob(f"*{ext}"):
            if f.stem.startswith("_"):
                continue
            path = str(f.relative_to(DOCS_DIR))[: -len(ext)]
            if path.startswith("orga/minutes/"):
                continue
            if path.startswith("orga/funding/"):
                continue
            files.append(path)
    return files


def get_sidebar_files(items=None):
    if items is None:
        items = json.loads(DOCS_SIDEBAR.read_text())
    files = []
    for item in items:
        if isinstance(item, str):
            if item.startswith(("http://", "https://", "mailto:")):
                continue
            files.append(item)
        elif isinstance(item, dict):
            if item.get("type") == "autogenerated":
                continue
            if item.get("type") == "doc":
                doc_id = item.get("id")
                if doc_id:
                    files.append(doc_id)  # same as a str-type item
            if "items" in item:
                files.extend(get_sidebar_files(item["items"]))
            if item.get("link", {}).get("type") == "doc":
                doc_id = item.get("link", {}).get("id")
                if doc_id:
                    files.append(doc_id)
            # shorthand syntax for categories is {"Category Name": ["file1", "file2"]}
            for value in item.values():
                if isinstance(value, list):
                    files.extend(get_sidebar_files(value))
    return files


def main():
    docs_files = set(get_all_docs_files())
    sidebar_files = set(get_sidebar_files())
    missing_files_from_sidebar = docs_files - sidebar_files
    exit_code = 0
    if missing_files_from_sidebar:
        print("The following files are missing from the docs/ sidebar:")
        for f in sorted(missing_files_from_sidebar):
            print(f"  - {f}")
        print("Please add them to docs/sidebar.json")
        exit_code = 1
    non_existing_files_in_sidebar = sidebar_files - docs_files
    if non_existing_files_in_sidebar:
        print("The following files included in sidebar do not exist:")
        for f in sorted(non_existing_files_in_sidebar):
            print(f"  - {f}")
        exit_code = 1
    return exit_code


if __name__ == "__main__":
    sys.exit(main())
