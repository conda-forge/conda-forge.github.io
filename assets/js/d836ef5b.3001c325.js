"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[51432],{21546:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"minutes/2023-11-29","title":"2023-11-29","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2023-11-29.md","sourceDirName":"minutes","slug":"/minutes/2023-11-29","permalink":"/community/minutes/2023-11-29","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2023-11-29.md","tags":[],"version":"current","lastUpdatedAt":1760547985000,"frontMatter":{"title":"2023-11-29"},"sidebar":"community","previous":{"title":"2023-12-13","permalink":"/community/minutes/2023-12-13"},"next":{"title":"2023-11-15","permalink":"/community/minutes/2023-11-15"}}');var t=s(74848),l=s(28453);const r={title:"2023-11-29"},d="conda-forge core meeting 2023-11-29",c={},o=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"conda-forge-core-meeting-2023-11-29",children:"conda-forge core meeting 2023-11-29"})}),"\n",(0,t.jsxs)(n.p,{children:["Add new agenda items under the ",(0,t.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://hackmd.io/#REPLACE_ME#",children:"Last week's meeting"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Initials"}),(0,t.jsx)(n.th,{children:"GitHub ID"}),(0,t.jsx)(n.th,{children:"Affiliation"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Daniel Ching"}),(0,t.jsx)(n.td,{children:"DJC"}),(0,t.jsx)(n.td,{children:"carterbox"}),(0,t.jsx)(n.td,{children:"Argonne National Lab"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Bianca Henderson"}),(0,t.jsx)(n.td,{children:"BH"}),(0,t.jsx)(n.td,{children:"beeankha"}),(0,t.jsx)(n.td,{children:"Anaconda"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marcel Bargull"}),(0,t.jsx)(n.td,{children:"MB"}),(0,t.jsx)(n.td,{children:"mbargull"}),(0,t.jsx)(n.td,{children:"Bioconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marcelo Trevisani"}),(0,t.jsx)(n.td,{children:"MDT"}),(0,t.jsx)(n.td,{children:"marcelotrevisani"}),(0,t.jsx)(n.td,{children:"conda-forge"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marius van Niekerk"}),(0,t.jsx)(n.td,{children:"MvN"}),(0,t.jsx)(n.td,{children:"mariusvniekerk"}),(0,t.jsx)(n.td,{children:"Voltron Data / cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Cheng H. Lee"}),(0,t.jsx)(n.td,{children:"CHL"}),(0,t.jsx)(n.td,{children:"chenghlee"}),(0,t.jsx)(n.td,{children:"Anaconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"John Kirkham"}),(0,t.jsx)(n.td,{children:"JK"}),(0,t.jsx)(n.td,{children:"jakirkham"}),(0,t.jsx)(n.td,{children:"cf/NVIDIA"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Matthew R Becker"}),(0,t.jsx)(n.td,{children:"MRB"}),(0,t.jsx)(n.td,{children:"beckermr"}),(0,t.jsx)(n.td,{children:"cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Dave Clements"}),(0,t.jsx)(n.td,{children:"DPC"}),(0,t.jsx)(n.td,{children:"tnabtaf"}),(0,t.jsx)(n.td,{children:"Anaconda"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Wolf Vollprecht"}),(0,t.jsx)(n.td,{children:"WV"}),(0,t.jsx)(n.td,{children:"wolfv"}),(0,t.jsx)(n.td,{children:"prefix.dev"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"13 people total"}),"\n",(0,t.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) Miniforge 23.10\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/miniforge/issues/511",children:"https://github.com/conda-forge/miniforge/issues/511"})}),"\n",(0,t.jsx)(n.li,{children:"Blocked on conda-build, conda-libmamba-solver buggy interaction; conda 23.11 expected to fix the issue(s)."}),"\n",(0,t.jsx)(n.li,{children:"(JRG) If there's no user demand/rush, we should wait until conda releases in the next few days."}),"\n",(0,t.jsx)(n.li,{children:"(JK) Punt till next core meeting"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) NumPy 2.0\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/numpy/numpy/pull/24861#issuecomment-1776781838",children:"https://github.com/numpy/numpy/pull/24861#issuecomment-1776781838"})}),"\n",(0,t.jsxs)(n.li,{children:["Expect upstream ",(0,t.jsx)(n.code,{children:"numpy"})," 2.0 release late 2023/early 2024, so we should be ready to handle this."]}),"\n",(0,t.jsxs)(n.li,{children:["As a group, we should decide on what we want numpy to do and document that as a new numpy issue or comment the webpage repo issue ( ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1997",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1997"})," )."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JRG) New conda-forge.org plan\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1971",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1971"})]}),"\n",(0,t.jsx)(n.li,{children:"Old red/orange + green color combination had accessibilty issues"}),"\n",(0,t.jsx)(n.li,{children:"Make sure we don't break (perma-)links when moving to new framework"}),"\n",(0,t.jsxs)(n.li,{children:["Find another accent color away from red+black.\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Folks are possibly fine with blues and greens too"}),"\n",(0,t.jsx)(n.li,{children:"Orange has some accessibility issues in general"}),"\n",(0,t.jsxs)(n.li,{children:["Some palettes:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://coolors.co/edf0da-f0dfad-8f2d56-ff6542-218380",children:"https://coolors.co/edf0da-f0dfad-8f2d56-ff6542-218380"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://coolors.co/1be7ff-6eeb83-e4ff1a-ff6542-e8aa14",children:"https://coolors.co/1be7ff-6eeb83-e4ff1a-ff6542-e8aa14"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:'Status page: progress bar should count "In PR" as Done'}),"\n",(0,t.jsx)(n.li,{children:"Some crosslinks deep in the documentation didn't work."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) what ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/cdt-builds/issues/66",children:"to do"})," with CDTs for Alma 8\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Ideally, make checklist with CDTs, for checking whether we can switch each to conda packages."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"What are the constraints/criteria we should consider/use when selecting which CDT packages to build vs repack?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Generally, avoid building packages that are "too close to the hardware"'}),"\n",(0,t.jsx)(n.li,{children:"Otherwise, build from source like we did for X11 packages."}),"\n",(0,t.jsx)(n.li,{children:'Need to figure out what versions we want to build ("old enough" and/or matching Alma 8 ABI)'}),"\n",(0,t.jsxs)(n.li,{children:["Which built-packages do we want to/can safely ignore ",(0,t.jsx)(n.code,{children:"run_exports"})," for? (Essentially, ",(0,t.jsx)(n.code,{children:"host"}),"-only packages that aren't pulled in at run time.)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Not going to be a single-person task to generate the list. Will need input from multiple community members."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Will be a lot of work, so we should get started now."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,t.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) CUDA Docker images\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Nvidia removing CentOS 8 images due to distro hitting EOL; only images will be UBI8, Rocky Linux."}),"\n",(0,t.jsx)(n.li,{children:"Currently switched conda-forge to UBI8"}),"\n",(0,t.jsx)(n.li,{children:'"Only matters" for CUDA 11.  In a few years, we should have transitioned to conda packages for CUDA and removed the need for Docker images.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (DJC) Policy for CUDA arch targets and pruning CUDA archs\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1901",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1901"})}),"\n",(0,t.jsxs)(n.li,{children:["Some packages are too big to build within the 6 hour CI limit while targeting many CUDA architectures\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"examples include libmagma, libtorch"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Maintainers don't always know how CUDA real/virtual architectures work"}),"\n",(0,t.jsx)(n.li,{children:"Some projects don't have default target CUDA archs"}),"\n",(0,t.jsx)(n.li,{children:"The linked discussion is about which CUDA archs should be targeted when the upstream project does not have defaults and in what order to drop archs in order to complete builds within the 6 hours"}),"\n",(0,t.jsx)(n.li,{children:"Can we offer better guidance to (feedstock) maintainers about which CUDA archs to target?"}),"\n",(0,t.jsxs)(n.li,{children:["Some solutions to the 6h+ build time\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Split libtorch build Python extension from libtorch (not supported right now upstream; needs work, unclear how much, to be asked)"}),"\n",(0,t.jsx)(n.li,{children:"Use the upcoming GPU server to run the builds there (no time limit)"}),"\n",(0,t.jsxs)(n.li,{children:["Having archspec detect CUDA archs would make some of these discussion moot and alleviate 6 hour limits\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"virtual packages make packages less portable"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"No policy for now; use private server for now; investigate helping pytorch split; look at cudarchspec package"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) Miniforge 23.10"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) CUDA 11.8"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) CUDA 12.x"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) Conda + libmamba"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) Public visibility of Alma images on Quay"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (HV) Archive k* ecosystem (see last comment ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1861",children:"here"}),", has five +1's from core)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"dead as a doornail, constant headache for migrations"}),"\n",(0,t.jsx)(n.li,{children:"archiving is reversible, so let's finally bite that bullet?"}),"\n",(0,t.jsx)(n.li,{children:"Can leave instructions in feedstock README (or a pinned issue) if someone comes along who wants to revive; however unlikely that is..."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (HV) ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/2015",children:"Migration"})," for ",(0,t.jsx)(n.code,{children:"error_overlinking: true"}),"?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"already being set for new feedstocks in staged-recipes, should roll out to existing ones too (eventually)."}),"\n",(0,t.jsxs)(n.li,{children:["would be a good opportunity to do ",(0,t.jsx)(n.code,{children:"{{ stdlib }}"}),"-related changes (e.g. remove implicit run-export to C/C++ stdlib --\x3e must be specified in recipe, ",(0,t.jsx)(n.code,{children:"error_overlinking"})," will find missing instances; if not necessary, package dependencies get slimmed by migration \ud83e\udd73)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(96540);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);