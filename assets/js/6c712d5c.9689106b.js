"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[2092],{73391:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"minutes/2025-01-08","title":"2025-01-08","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2025-01-08.md","sourceDirName":"minutes","slug":"/minutes/2025-01-08","permalink":"/community/minutes/2025-01-08","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2025-01-08.md","tags":[{"inline":true,"label":"meeting-notes","permalink":"/community/tags/meeting-notes"}],"version":"current","lastUpdatedAt":1754412509000,"frontMatter":{"tags":["meeting-notes"],"title":"2025-01-08"},"sidebar":"community","previous":{"title":"2025-01-22","permalink":"/community/minutes/2025-01-22"},"next":{"title":"2024-12-11","permalink":"/community/minutes/2024-12-11"}}');var s=i(74848),l=i(28453);const r={tags:["meeting-notes"],title:"2025-01-08"},d="conda-forge core meeting 2025-01-08",o={},c=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <strong>new</strong>() agenda items",id:"your-new-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"conda-forge-core-meeting-2025-01-08",children:"conda-forge core meeting 2025-01-08"})}),"\n",(0,s.jsxs)(n.p,{children:["Add new agenda items under the ",(0,s.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://conda-forge.org/community/minutes/",children:"Previous meetings"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Initials"}),(0,s.jsx)(n.th,{children:"GitHub ID"}),(0,s.jsx)(n.th,{children:"Affiliation"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Schuyler Martin"}),(0,s.jsx)(n.td,{children:"SM"}),(0,s.jsx)(n.td,{children:"schuylermartin45"}),(0,s.jsx)(n.td,{children:"Anaconda"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Wolf Vollprecht"}),(0,s.jsx)(n.td,{children:"WV"}),(0,s.jsx)(n.td,{children:"wolfv"}),(0,s.jsx)(n.td,{children:"prefix.dev"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Eric Lundby"}),(0,s.jsx)(n.td,{children:"EL"}),(0,s.jsx)(n.td,{children:"ELundby45"}),(0,s.jsx)(n.td,{children:"Anaconda"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Daniel Petry"}),(0,s.jsx)(n.td,{children:"DP"}),(0,s.jsx)(n.td,{children:"danpetry"}),(0,s.jsx)(n.td,{children:"Anaconda"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"John Kirkham"}),(0,s.jsx)(n.td,{children:"JK"}),(0,s.jsx)(n.td,{children:"jakirkham"}),(0,s.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Filipe Fernandes"}),(0,s.jsx)(n.td,{children:"FF"}),(0,s.jsx)(n.td,{children:"ocefpaf"}),(0,s.jsx)(n.td,{children:"conda-forge"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Jaime Rodr\xedguez-Guerra"}),(0,s.jsx)(n.td,{children:"JRG"}),(0,s.jsx)(n.td,{children:"jaimergp"}),(0,s.jsx)(n.td,{children:"conda-forge/quansight"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"7 people total"}),"\n",(0,s.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["[DP] PyTorch recipe sync\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Recent activity in the feedstock, helped by Micha\u0142 Gorny."}),"\n",(0,s.jsx)(n.li,{children:"How to manage contribution syncs between conda-forge and defaults?"}),"\n",(0,s.jsxs)(n.li,{children:["Will PyTorch switch to rattler-build soon? This might complicate syncing with defaults. Is it costly to convert changes back to v0 or is that more in the realm of unfeasible?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"WV: build scripts should just be copy-paste, but the meta.yaml is a bit different specially when it comes to split-outputs which might have subtle differences. Manageable but YMMV."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["WV: (see notes in item below)\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multi-output like Pytorch would benefit a lot thanks to the improved performance."}),"\n",(0,s.jsx)(n.li,{children:"Existing blockers: autotick-bot version bumping doesn't work yet but work is in progress, maybe even this week. This should unblock a few important feedstocks."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"JK: Following feedstock updates closely. Seems like Micha\u0142 is the one pushing for most changes and fixes. Some churn going on with which tests need to be enabled/disabled, but eager to see the fixes merged because it's taking a while to land those."}),"\n",(0,s.jsxs)(n.li,{children:["DP: Windows support needed for feature parity with the deprecated pytorch channel. EB has been working on it. Have access to beefy dev machines. How to run locally?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Yep, assuming a local Miniforge, then run ",(0,s.jsx)(n.code,{children:"conda build -m .ci_support/<win_config.yaml> recipe"}),". You'll need the MSVC compilers already installed in the system."]}),"\n",(0,s.jsxs)(n.li,{children:["Windows Docker image definitions available at ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/docker-images/pull/209",children:"https://github.com/conda-forge/docker-images/pull/209"})," but not sure if they are up-to-date or even functional now."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["[DP] (relatedly) conda-forge rattler-build transition plans\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[WV] 400+ packages are migrated (according to GH Search)"}),"\n",(0,s.jsx)(n.li,{children:"[WV] working on the autotick bot"}),"\n",(0,s.jsxs)(n.li,{children:["WV: Anaconda's plans to switching?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DP: Internal discussion ongoing. DP pushing for it."}),"\n",(0,s.jsx)(n.li,{children:"CHL: The goal is to align efforts but no timelines known yet."}),"\n",(0,s.jsx)(n.li,{children:"WV: Any renewed efforts for conda-build?"}),"\n",(0,s.jsx)(n.li,{children:"CHL: No new information yet. Details to come after catching up after holiday break."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:'MvN: Internal experiments with rattler-build for arrow, working. Won\'t probably switch yet due to how low-level this dependency is and the potential for breakages. Maintainers tend to be risk-averse in these "important" packages. But it works!'}),"\n",(0,s.jsx)(n.li,{children:"JRG: conda-forge.zulipchat.com available for more chat-like conversations if that helps with iterations!"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["[WV] sandboxing options in rattler-build\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["isolates network access in Unix via ",(0,s.jsx)(n.code,{children:"--sandbox"}),"; demo shows how ",(0,s.jsx)(n.code,{children:"curl https://google.com"})," fails, but succeeds if ",(0,s.jsx)(n.code,{children:"--allow-network"})," is also added (or no ",(0,s.jsx)(n.code,{children:"--sandbox"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["it should also prevent writes to paths outside ",(0,s.jsx)(n.code,{children:"$PREFIX"})]}),"\n",(0,s.jsx)(n.li,{children:"once stable, could be applied in conda-forge to make builds more hermetic, along with path mangling; e.g. prevent access to Homebrew stuff."}),"\n",(0,s.jsxs)(n.li,{children:["MvN: Windows support?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"WV: Not yet but know how to do it. Needs some extra engineering but should be feasible with a couple days worth of effort."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["[WV] adding menuinst to pixi (and autocompletion support)\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda/rattler/pull/840",children:"https://github.com/conda/rattler/pull/840"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/prefix-dev/pixi/issues/2366",children:"https://github.com/prefix-dev/pixi/issues/2366"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hoping to add CEP standard"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["[WV] optional dependencies experiments in rattler\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implementation doesn't seem too complicated, the solver just does its job"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["[DP]: Question about logging styles in rattler-build.\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Using tracing crate, multiple outputs possible (fancy, plain, json). Easy to extend, happy to accept feedback."}),"\n",(0,s.jsx)(n.li,{children:"MvN: it could even push to opentelemetry!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"your-new-agenda-items",children:["Your ",(0,s.jsx)(n.strong,{children:"new"}),"() agenda items"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var t=i(96540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);