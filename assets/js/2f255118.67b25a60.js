"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[74157],{23641:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var s=r(70604),o=r(74848),t=r(28453);const a={},c="Clang now available as compiler for all platforms",l={authorsImageUrls:[]},i=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:['Our compiler stack per platform generally uses the "default" compiler for that\nplatform, see e.g. ',(0,o.jsx)(n.a,{href:"https://conda-forge.org/docs/maintainer/infrastructure/#compilers-and-runtimes",children:"here"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"In practice, this meant that"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"c_compiler:\n  - gcc         # [linux]\n  - clang       # [osx]\n  - vs2019      # [win]\ncxx_compiler:\n  - gxx         # [linux]\n  - clangxx     # [osx]\n  - vs2019      # [win]\n"})}),"\n",(0,o.jsx)(n.p,{children:"was the only possible choice for C/C++ compilers."}),"\n",(0,o.jsxs)(n.p,{children:["Recently, we finished adding preliminary support ",(0,o.jsx)(n.code,{children:"clang"})," / ",(0,o.jsx)(n.code,{children:"clangxx"})," as\nC/C++ compilers also on linux and windows, starting from clang 18.\nThis is still very fresh, so bugs are possible, and we ask not to change\nthe default compilers on feedstocks unless there are compelling reasons."]}),"\n",(0,o.jsxs)(n.p,{children:["In any case, it is now possible to use the following configuration in\n",(0,o.jsx)(n.code,{children:"recipe/conda_build_config.yaml"})," (note the lack of platform selectors):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"c_compiler:\n  - clang\nc_compiler_version:\n  - 18\ncxx_compiler:\n  - clangxx\ncxx_compiler_version:\n  - 18\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var s=r(96540);const o={},t=s.createContext(o);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},70604:e=>{e.exports=JSON.parse('{"permalink":"/news/2024/04/30/clang-everywhere","source":"@site/news/2024-04-30-clang-everywhere.md","title":"Clang now available as compiler for all platforms","description":"Our compiler stack per platform generally uses the \\"default\\" compiler for that","date":"2024-04-30T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Azure macOS x64 runners will now default to macos-12","permalink":"/news/2024/05/02/bump-macos-12"},"nextItem":{"title":"The new conda-forge.org","permalink":"/news/2024/04/09/new-website"}}')}}]);