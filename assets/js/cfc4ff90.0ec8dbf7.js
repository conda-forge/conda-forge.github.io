"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[83310],{10695:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"maintainer/understanding_conda_forge/staged_recipes","title":"Staged-recipes","description":"staged-recipes is the gateway to conda-forge.","source":"@site/docs/maintainer/understanding_conda_forge/staged_recipes.md","sourceDirName":"maintainer/understanding_conda_forge","slug":"/maintainer/understanding_conda_forge/staged_recipes","permalink":"/docs/maintainer/understanding_conda_forge/staged_recipes","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/docs/maintainer/understanding_conda_forge/staged_recipes.md","tags":[],"version":"current","lastUpdatedAt":1740040385000,"frontMatter":{},"sidebar":"docs","previous":{"title":"The life cycle of a package","permalink":"/docs/maintainer/understanding_conda_forge/life_cycle"},"next":{"title":"The feedstock","permalink":"/docs/maintainer/understanding_conda_forge/feedstocks"}}');var s=n(74848),i=n(28453);const a={},c="Staged-recipes",o={},d=[{value:"Submission to staged-recipes",id:"submission-to-staged-recipes",level:2},{value:"Feedstock creation",id:"feedstock-creation",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"staged-recipes",children:"Staged-recipes"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/maintainer/infrastructure#staged-recipes",children:(0,s.jsx)(r.code,{children:"staged-recipes"})})," is the gateway to conda-forge.\nEvery package published has gone through this repository as part of the submission process."]}),"\n",(0,s.jsx)(r.h2,{id:"submission-to-staged-recipes",children:"Submission to staged-recipes"}),"\n",(0,s.jsx)(r.p,{children:"Users normally follow these steps:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["Fork the ",(0,s.jsx)(r.code,{children:"conda-forge/staged-recipes"})," repository and create a new branch from ",(0,s.jsx)(r.code,{children:"main"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:["Add a ",(0,s.jsx)(r.code,{children:"meta.yaml"})," or ",(0,s.jsx)(r.code,{children:"recipe.yaml"})," file (plus other files as needed) in a new subdirectory under ",(0,s.jsx)(r.code,{children:"recipes/"}),"."]}),"\n",(0,s.jsx)(r.li,{children:"Open a new pull request and pass the CI checks, which include building the recipe under different operating systems and some static analysis of the recipe files (linting)."}),"\n",(0,s.jsx)(r.li,{children:"Ask for a review and apply the suggestions."}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["When the PR is approved and merged to ",(0,s.jsx)(r.code,{children:"main"}),", the new directory under ",(0,s.jsx)(r.code,{children:"recipes/"})," will trigger the ",(0,s.jsx)(r.code,{children:"staged-recipes"})," pipelines, which will create a new feedstock with the recipe contents."]}),"\n",(0,s.jsx)(r.mermaid,{value:"sequenceDiagram\n    actor c as contributor\n    participant repo as staged-recipes repo\n    rect var(--ifm-color-primary-contrast-background)\n        Note right of c: 1: Prepare PR\n        c->>repo: submit PR\n        activate repo\n        loop\n            repo->>c: report failing CI\n            deactivate repo\n            c->>repo: add commits\n            activate repo\n        end\n        repo->>c: report successful CI\n        deactivate repo\n    end\n    rect var(--ifm-color-primary-contrast-background)\n        Note right of c: 2: Solicit and address reviews\n        loop\n            c->>repo: mark as ready for review\n            create actor reviewer\n            repo->>reviewer: request review\n            reviewer->>repo: provide comments\n            c->>repo: address comments\n            activate repo\n            loop\n                repo->>c: report failing CI\n                deactivate repo\n                c->>repo: add commits\n                activate repo\n            end\n            repo->>c: report successful CI\n            deactivate repo\n        end\n    end\n    rect var(--ifm-color-primary-contrast-background)\n        Note right of repo: Integrate new package into conda-forge\n        reviewer->>repo: accept PR\n        reviewer->>repo: merge PR\n    end"}),"\n",(0,s.jsx)(r.h2,{id:"feedstock-creation",children:"Feedstock creation"}),"\n",(0,s.jsxs)(r.p,{children:["Once a new recipe has been merged into ",(0,s.jsx)(r.code,{children:"staged-recipes"}),", it will be converted to a feedstock.\nThis creates the home of the recipe as a new repository under the ",(0,s.jsx)(r.code,{children:"conda-forge"})," organization.\nIt also creates the associated team and registers the recipe with the CI providers that are used for building packages, as well as with the distribution infrastructure to allow for uploads."]}),"\n",(0,s.jsx)(r.mermaid,{value:"sequenceDiagram\n    participant sr as staged-recipes repo\n    participant ar as admin-requests repo\n    loop Several times per hour\n        ar->>sr: check for new recipes\n        loop for every new recipe\n            create participant cs as conda-smithy\n            ar->>cs: register github\n            create participant fs as feedstock repo\n            participant cf as conda-forge organization\n            participant ci as ci providers\n            cs->>fs: create feedstock repo\n            cs->>cf: create maintainers team\n            cs->>fs: add maintainers team\n            ar->>cs: register ci\n            cs->>ci: register builds\n            destroy cs\n            cs->>ar: finish\n            ar->>sr: remove recipe from staged-recipes\n        end\n    end"}),"\n",(0,s.jsxs)(r.p,{children:["Once the feedstock creation is completed successfully, all future events are handled through the feedstock;\nthe ",(0,s.jsx)(r.code,{children:"staged-recipes"})," repository no longer plays a role."]})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var t=n(96540);const s={},i=t.createContext(s);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);