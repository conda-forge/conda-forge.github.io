"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[65535],{21317:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"minutes/2024-11-13","title":"2024-11-13","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2024-11-13.md","sourceDirName":"minutes","slug":"/minutes/2024-11-13","permalink":"/community/minutes/2024-11-13","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2024-11-13.md","tags":[{"inline":true,"label":"meeting-notes","permalink":"/community/tags/meeting-notes"}],"version":"current","lastUpdatedAt":1749677310000,"frontMatter":{"tags":["meeting-notes"],"title":"2024-11-13"},"sidebar":"community","previous":{"title":"2024-11-27","permalink":"/community/minutes/2024-11-27"},"next":{"title":"2024-10-30","permalink":"/community/minutes/2024-10-30"}}');var i=s(74848),d=s(28453);const r={tags:["meeting-notes"],title:"2024-11-13"},o="conda-forge core meeting 2024-11-13",c={},l=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"conda-forge-core-meeting-2024-11-13",children:"conda-forge core meeting 2024-11-13"})}),"\n",(0,i.jsxs)(n.p,{children:["Add new agenda items under the ",(0,i.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://conda-forge.org/community/minutes/",children:"Previous meetings"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Initials"}),(0,i.jsx)(n.th,{children:"GitHub ID"}),(0,i.jsx)(n.th,{children:"Affiliation"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Marco Esters"}),(0,i.jsx)(n.td,{children:"ME"}),(0,i.jsx)(n.td,{children:"marcoesters"}),(0,i.jsx)(n.td,{children:"Anaconda"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Daniel J Ching"}),(0,i.jsx)(n.td,{children:"DJC"}),(0,i.jsx)(n.td,{children:"carterbox"}),(0,i.jsx)(n.td,{children:"NVIDIA/conda-forge"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Klaus Zimmermann"}),(0,i.jsx)(n.td,{children:"KZ"}),(0,i.jsx)(n.td,{children:"zklaus"}),(0,i.jsx)(n.td,{children:"Quansight"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Cheng H. Lee"}),(0,i.jsx)(n.td,{children:"CHL"}),(0,i.jsx)(n.td,{children:"chenghlee"}),(0,i.jsx)(n.td,{children:"Anaconda/conda-forge"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Scott Hain"}),(0,i.jsx)(n.td,{children:"SMH"}),(0,i.jsx)(n.td,{children:"scotthain"}),(0,i.jsx)(n.td,{children:"Anaconda"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Dasha Gurova"}),(0,i.jsx)(n.td,{children:"DG"}),(0,i.jsx)(n.td,{children:"dashagurova"}),(0,i.jsx)(n.td,{children:"Anaconda"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"John Kirkham"}),(0,i.jsx)(n.td,{children:"JK"}),(0,i.jsx)(n.td,{children:"jakirkham"}),(0,i.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"X people total"}),"\n",(0,i.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,i.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (DJC) conda-forge default build containers should always have the latest glibc/sysroot package that we publish\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/6283#issuecomment-2453101928",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/6283#issuecomment-2453101928"})}),"\n",(0,i.jsx)(n.li,{children:"defaulting to the latest os makes os_version irrelevant for most users because glibc backward compatability"}),"\n",(0,i.jsx)(n.li,{children:"glibc constraint still set by sysroot package at build time; this package can lag behind syroot in container"}),"\n",(0,i.jsx)(n.li,{children:'(HV) For clarity, I would formulate the topline as: "conda-forge should use the newest available image versions by default (in sync with max sysroot that we publish)"'}),"\n",(0,i.jsxs)(n.li,{children:["(HV) Fully support this proposal; draft implementation ",(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/6626",children:"here"})]}),"\n",(0,i.jsxs)(n.li,{children:["(HV) Also propose to remove ",(0,i.jsx)(n.code,{children:"c_stdlib_version"}),' from CUDA zip -- with the policy of "always newest image", this is not necessary anymore (and actually ',(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/6626#issuecomment-2448880229",children:"harmful"})," to common usecases)"]}),"\n",(0,i.jsxs)(n.li,{children:["Additional clarifications:\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["HV: System image mostly irrelevant to the build process, only relevant for runtime constraints that power the ",(0,i.jsx)(n.code,{children:"__glibc"})," virtual package."]}),"\n",(0,i.jsx)(n.li,{children:"IF: Ok with proceeding, but should take care of making sure that the cuda-* repackaged stuff still works with the original GLIBC / Docker images. Override in those cases, because those repackaged builds do not use our sysroot, and we can't ensure otherwise that they do work with the lowest Docker image available."}),"\n",(0,i.jsxs)(n.li,{children:["HV: consequence would be using ",(0,i.jsx)(n.code,{children:"os_version: linux_*: alma8"})," in ",(0,i.jsx)(n.code,{children:"conda-forge.yml"})," on feedstocks that do binary repackaing"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Recap: Ok to go, but binary repackaging feedstocks should pin os_version as per above (to stay with whatever minimum version they claim to support) ",(0,i.jsx)(n.em,{children:"before"})," bumping the default image."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Propose to consolidate image names: ",(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/docker-images/issues/293",children:"https://github.com/conda-forge/docker-images/issues/293"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["IF/CHL: Jinja variables can't be used in ",(0,i.jsx)(n.code,{children:"conda_build_config.yaml"})]}),"\n",(0,i.jsx)(n.li,{children:"use distro-name in the tag (also for CUDA 11.8); despite the lack of templating over it"}),"\n",(0,i.jsx)(n.li,{children:"(Some conversations about dropping CUDA 11.8 so the corresponding Docker images are not needed. This will happen eventually, just not yet.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JRG) ",(0,i.jsx)(n.code,{children:"conda-forge/miniforge"}),' considered "dangerous site" by Google.\n',(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/miniforge/issues/667",children:"https://github.com/conda-forge/miniforge/issues/667"})]}),"\n",(0,i.jsx)(n.li,{children:"Proposed solution: Move content to conda-forge.org, where we have ownership for reviews and disputes."}),"\n",(0,i.jsxs)(n.li,{children:["Thoughts?\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Consensus: Give it a try."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) How to deal with ",(0,i.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/6630",children:"CUDA 12.x"}),"?"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," (ME) Composite action to build installers (Miniconda, Miniforge, etc.)"]}),"\n",(0,i.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(96540);const i={},d=t.createContext(i);function r(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);