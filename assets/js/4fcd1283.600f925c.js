"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[39554],{97495:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var r=t(60570),o=t(74848),a=t(28453);const i={authors:["cj-wright"],tags:["conda-forge"]},s="The API Territory and Version Number Map",c={authorsImageUrls:[void 0]},d=[];function l(e){const n={p:"p",...(0,a.R)(),...e.components};return(0,o.jsx)(n.p,{children:"tl;dr Depending on specific version numbers of underlying libraries may\nbe too inaccurate and cause headaches as upstream libraries evolve and\nchange. A more detailed approach is needed. In this post I outline\ncurrent and potential work on a path towards a more complete inspection\nof requirements based on APIs and dynamic pinning of libraries."})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(96540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},60570:e=>{e.exports=JSON.parse('{"permalink":"/blog/2020/10/02/versions","editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/blog/2020-10-02-versions.md","source":"@site/blog/2020-10-02-versions.md","title":"The API Territory and Version Number Map","description":"tl;dr Depending on specific version numbers of underlying libraries may","date":"2020-10-02T00:00:00.000Z","tags":[{"inline":true,"label":"conda-forge","permalink":"/blog/tags/conda-forge"}],"readingTime":6.915,"hasTruncateMarker":true,"authors":[{"name":"Christopher J. \'CJ\' Wright","title":"Member of conda-forge/core","url":"https://github.com/cj-wright","imageURL":"https://github.com/cj-wright.png","key":"cj-wright","page":null}],"frontMatter":{"authors":["cj-wright"],"tags":["conda-forge"]},"unlisted":false,"prevItem":{"title":"macOS ARM builds on conda-forge","permalink":"/blog/2020/10/29/macos-arm64"},"nextItem":{"title":"R 4.0 Migration Retrospective","permalink":"/blog/2020/07/11/r-4"}}')}}]);