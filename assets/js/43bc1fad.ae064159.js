"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[30003],{98458:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"minutes/2023-08-23","title":"2023-08-23","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2023-08-23.md","sourceDirName":"minutes","slug":"/minutes/2023-08-23","permalink":"/community/minutes/2023-08-23","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2023-08-23.md","tags":[],"version":"current","lastUpdatedAt":1739781078000,"frontMatter":{"title":"2023-08-23"},"sidebar":"community","previous":{"title":"2023-09-06","permalink":"/community/minutes/2023-09-06"},"next":{"title":"2023-08-09","permalink":"/community/minutes/2023-08-09"}}');var t=s(74848),c=s(28453);const l={title:"2023-08-23"},d="conda-forge core meeting 2023-08-23",r={},o=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Introductions",id:"introductions",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"conda-forge-core-meeting-2023-08-23",children:"conda-forge core meeting 2023-08-23"})}),"\n",(0,t.jsxs)(n.p,{children:["Add new agenda items under the ",(0,t.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://hackmd.io/#REPLACE_ME#",children:"Last week's meeting"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Initials"}),(0,t.jsx)(n.th,{children:"GitHub ID"}),(0,t.jsx)(n.th,{children:"Affiliation"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Jaime Rodr\xedguez-Guerra"}),(0,t.jsx)(n.td,{children:"JRG"}),(0,t.jsx)(n.td,{children:"jaimergp"}),(0,t.jsx)(n.td,{children:"Quansight"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Dave Clements"}),(0,t.jsx)(n.td,{children:"DPC"}),(0,t.jsx)(n.td,{children:"tnabtaf"}),(0,t.jsx)(n.td,{children:"Anaconda"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Filpe Fernandes"}),(0,t.jsx)(n.td,{children:"FF"}),(0,t.jsx)(n.td,{children:"ocefpaf"}),(0,t.jsx)(n.td,{children:"conda-forge"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Cheng H. Lee"}),(0,t.jsx)(n.td,{children:"CHL"}),(0,t.jsx)(n.td,{children:"chenghlee"}),(0,t.jsx)(n.td,{children:"Anaconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Matthew R Becker"}),(0,t.jsx)(n.td,{children:"MRB"}),(0,t.jsx)(n.td,{children:"beckermr"}),(0,t.jsx)(n.td,{children:"cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marcel Bargull"}),(0,t.jsx)(n.td,{children:"MB"}),(0,t.jsx)(n.td,{children:"mbargull"}),(0,t.jsx)(n.td,{children:"Bioconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Katherine Kinnaman"}),(0,t.jsx)(n.td,{children:"KK"}),(0,t.jsx)(n.td,{children:"kathatherine"}),(0,t.jsx)(n.td,{children:"Anaconda"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"John Kirkham"}),(0,t.jsx)(n.td,{children:"JK"}),(0,t.jsx)(n.td,{children:"jakirkham"}),(0,t.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"17 people total"}),"\n",(0,t.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"introductions",children:"Introductions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ryan Keith (AnacondaInc)"}),"\n",(0,t.jsx)(n.li,{children:"James Loy (AnacondaInc)"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,t.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Drop MacOS <10.13\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Announcement ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/1993",children:"PR"}),"; TODO ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1844#issuecomment-1675953297",children:"list"}),", context & discussion. Ecosystem is forcing us to move on (libcxx-trick doesn't help anymore); \u226a1% users affected"]}),"\n",(0,t.jsxs)(n.li,{children:["Blocking abseil & grpc ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4814",children:"migration"})," already, soon also libcxx 17"]}),"\n",(0,t.jsxs)(n.li,{children:["Do we want to formulate a more specific support policy? (10.13 is EOL for 3 years already; CPython might jump to 10.15/11.0)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["(CHL) Could consider following Apple's lifecycle, but be aware that may force us to drop ",(0,t.jsx)(n.code,{children:"osx-64"})," before we're ready to. (Expect ~3 yrs left on Apple's support for such hardware)"]}),"\n",(0,t.jsxs)(n.li,{children:["(JK) If we do a NEP-29 style annoucement, we should align with other projects to make sure ",(0,t.jsx)(n.code,{children:"conda"}),"/",(0,t.jsx)(n.code,{children:"conda-forge"})," is not the odd ecosystem out."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["MB: macOS 10.14 (Mojave) is the last version to support 32-bit (",(0,t.jsx)(n.a,{href:"https://support.apple.com/en-us/HT208436",children:"https://support.apple.com/en-us/HT208436"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["MB: We could point people with old Macs to ",(0,t.jsx)(n.a,{href:"https://github.com/dortania/OpenCore-Legacy-Patcher",children:"https://github.com/dortania/OpenCore-Legacy-Patcher"})," or the like"]}),"\n",(0,t.jsxs)(n.li,{children:["Action items:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Someone check the announcement PR to make sure we have all the technical details correct"}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"__osx>=10.13"})," as ",(0,t.jsx)(n.code,{children:"run_exports"}),"  to the appropriate compilers packages <- actually a clobber file\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Docs: ",(0,t.jsx)(n.a,{href:"https://docs.conda.io/projects/conda-build/en/stable/resources/variants.html#partially-clobbering-recipes",children:"https://docs.conda.io/projects/conda-build/en/stable/resources/variants.html#partially-clobbering-recipes"})]}),"\n",(0,t.jsxs)(n.li,{children:["I think actually we want recipe_append.yaml (",(0,t.jsx)(n.a,{href:"https://docs.conda.io/projects/conda-build/en/stable/resources/variants.html#appending-to-recipes",children:"https://docs.conda.io/projects/conda-build/en/stable/resources/variants.html#appending-to-recipes"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"This will add to run, not clobber it."}),"\n",(0,t.jsxs)(n.li,{children:["issue here: ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/issues/260",children:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/issues/260"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Scipy for py312 on win will need a fortran compiler (that's not gfortran)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Switch to ",(0,t.jsx)(n.code,{children:"meson"})," requires uniformity of compilers that invalidates current MSVC + gfortran approach"]}),"\n",(0,t.jsx)(n.li,{children:"Either flang, lfortran (not yet ready), ifx (waiting for Intel follow-up)"}),"\n",(0,t.jsxs)(n.li,{children:["Been working on ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/flang-feedstock/pull/28",children:"flang"})," for half a year, could use some help"]}),"\n",(0,t.jsx)(n.li,{children:"This will very likely block 3.12 migration (on windows at least)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JRG) Miniforge and Mambaforge are now identical (both ship conda-libmamba-solver and mamba).\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Note: ",(0,t.jsx)(n.code,{children:"conda"})," will switch to conda-libmamba-solver as default in the next release (23.9)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) CUDA 12 arch migration\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4799",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4799"})}),"\n",(0,t.jsx)(n.li,{children:"Merge! Merge! Merge!"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) CUDA 11.8\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1981",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1981"})}),"\n",(0,t.jsx)(n.li,{children:"John will open a migrator PR"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) GLIBC 2.28\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Is alma linux a GLIBC option?"}),"\n",(0,t.jsx)(n.li,{children:"MRB: WE are in a holding pattern until dust settles."}),"\n",(0,t.jsx)(n.li,{children:"CDTs: we will try and drop as many as possible for cos8"}),"\n",(0,t.jsxs)(n.li,{children:["issue: ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/cdt-builds/issues/66",children:"https://github.com/conda-forge/cdt-builds/issues/66"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) Windows ARM\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Getting a machine is challenge."}),"\n",(0,t.jsx)(n.li,{children:"Physical machine is an option. IF we do that it goes to Isuru.  This is for debugging, not CI"}),"\n",(0,t.jsx)(n.li,{children:"OK! Going to Isuru."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (MRB) repodata patches now use yaml files - yay yaml! - i'm moving things over bit by bit, fixing bugs in the process"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JRG) Repology.org integration\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/repology/repology-updater/issues/518",children:"https://github.com/repology/repology-updater/issues/518"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/593",children:"https://github.com/conda-forge/conda-forge.github.io/issues/593"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (HV) [bikeshedding at the end] ",(0,t.jsx)(n.code,{children:"-dev"})," vs. ",(0,t.jsx)(n.code,{children:"-devel"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["came up in boost unification, current PR uses the latter based on Isuru's ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/boost-feedstock/pull/164#issuecomment-1681583116",children:"rationale"})]}),"\n",(0,t.jsx)(n.li,{children:"matches Anaconda naming & CDTs, does not match recent CUDA feedstocks, tangentially related to distro discussion (RHEL vs. Debian). We should try to choose one."}),"\n",(0,t.jsxs)(n.li,{children:["JRG: Our own data:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.a,{href:"https://github.com/search?q=repo%3Aconda-forge%2Ffeedstock-outputs+path%3A%22-dev.json%22&type=code",children:[(0,t.jsx)(n.code,{children:"-dev"})," suffix"]}),": 33 packages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.a,{href:"https://github.com/search?q=repo%3Aconda-forge%2Ffeedstock-outputs+path%3A-devel.json&type=code",children:[(0,t.jsx)(n.code,{children:"-devel"})," suffix"]}),": 10 packages"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) NumPy 2.0 planning\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1997",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1997"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/issues/516",children:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/issues/516"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) Start using ",(0,t.jsx)(n.code,{children:"conda"}),"'s ",(0,t.jsx)(n.code,{children:"libmamba"})," ",(0,t.jsx)(n.code,{children:"solver"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/pull/259",children:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/pull/259"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/docker-images/pull/240",children:"https://github.com/conda-forge/docker-images/pull/240"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const t={},c=i.createContext(t);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);