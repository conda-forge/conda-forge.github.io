"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[1901],{32277:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"minutes/2020-08-19","title":"2020-08-19","description":"Zoom link","source":"@site/community/minutes/2020-08-19.md","sourceDirName":"minutes","slug":"/minutes/2020-08-19","permalink":"/community/minutes/2020-08-19","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2020-08-19.md","tags":[],"version":"current","lastUpdatedAt":1743255244000,"frontMatter":{"title":"2020-08-19"},"sidebar":"community","previous":{"title":"2020-08-26","permalink":"/community/minutes/2020-08-26"},"next":{"title":"2020-08-12","permalink":"/community/minutes/2020-08-12"}}');var t=s(74848),l=s(28453);const a={title:"2020-08-19"},o="2020-08-19 conda-forge core meeting",r={},c=[{value:"Attendees",id:"attendees",level:2},{value:"Agenda",id:"agenda",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"Your new agenda items",id:"your-new-agenda-items",level:3},{value:"Stuff from last week that we didn&#39;t get to",id:"stuff-from-last-week-that-we-didnt-get-to",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Subteam updates",id:"subteam-updates",level:3},{value:"Bot",id:"bot",level:4},{value:"ARM",id:"arm",level:4},{value:"POWER",id:"power",level:4},{value:"CUDA",id:"cuda",level:4},{value:"Docs",id:"docs",level:4},{value:"staged-recipes",id:"staged-recipes",level:4},{value:"website",id:"website",level:4},{value:"security+systems",id:"securitysystems",level:4},{value:"CI infrastructure",id:"ci-infrastructure",level:3},{value:"Compiler upgrade",id:"compiler-upgrade",level:4},{value:"CFEP updates",id:"cfep-updates",level:3},{value:"Open PRs",id:"open-prs",level:4},{value:"Discussion",id:"discussion",level:2},{value:"Check in on previous action items",id:"check-in-on-previous-action-items",level:2},{value:"This meeting",id:"this-meeting",level:3},{value:"Last meeting",id:"last-meeting",level:3},{value:"2 meetings ago",id:"2-meetings-ago",level:3},{value:"3 meetings ago",id:"3-meetings-ago",level:3},{value:"Move to Issue Tracker",id:"move-to-issue-tracker",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2020-08-19-conda-forge-core-meeting",children:"2020-08-19 conda-forge core meeting"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://flatiron.zoom.us/j/93242638216?pwd=bjRCWmVJRW1oTGJhN09VUmxtTTJOUT09",children:"Zoom link"}),"\n",(0,t.jsx)(n.a,{href:"https://arewemeetingyet.com/UTC/2020-08-05/17:00/w/Conda-forge%20dev%20meeting#eyJ1cmwiOiJodHRwczovL2hhY2ttZC5pby9wUk15dFVKV1FmU3NJM2xvMGlqQzJRP2VkaXQifQ==",children:"What time is the meeting in my time zone"}),"\n",(0,t.jsx)(n.a,{href:"https://hackmd.io/uoxd_bzSRie5Dq1ZrMSvhA",children:"last weeks meeting"})]}),"\n",(0,t.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n",(0,t.jsx)(n.h2,{id:"agenda",children:"Agenda"}),"\n",(0,t.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," intros for new folks on the call"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (CJ) budget"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"your-new-agenda-items",children:"Your new agenda items"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (ED) @sylvain: Any updates from OVH on the windows VM?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (AS) qgpu - GPU build agents."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Drone or Azure? Drone is a simple go executable and you can run it in docker. Azure build agent is heavy weight?"}),"\n",(0,t.jsx)(n.li,{children:"Pick one and go"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (CJ) Version bumps offering dependency analysis as hints"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Hinting system for bot for what we think the dependencies should be based on the analysis of the source code"}),"\n",(0,t.jsx)(n.li,{children:"Currently using depfinder. Only works for Python."}),"\n",(0,t.jsx)(n.li,{children:"Around 6000 packages have been analyzed"}),"\n",(0,t.jsx)(n.li,{children:"For 30% of the packages depfinder and CF metadata agree"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/regro/cf-scripts/pull/1126",children:"https://github.com/regro/cf-scripts/pull/1126"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/regro/cf-graph-countyfair/tree/master/audits/depfinder",children:"https://github.com/regro/cf-graph-countyfair/tree/master/audits/depfinder"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/regro/cf-graph-countyfair/blob/master/audits/depfinder/_net_audit.json",children:"https://github.com/regro/cf-graph-countyfair/blob/master/audits/depfinder/_net_audit.json"})}),"\n",(0,t.jsxs)(n.li,{children:["Can we do this for C packages?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Post-build steps do something to the DSOs that are created. Can't do it beforehand. You can check after the build."}),"\n",(0,t.jsx)(n.li,{children:"(CJ) Can the C builds publish this information?"}),"\n",(0,t.jsx)(n.li,{children:"(JJ) Maybe?"}),"\n",(0,t.jsx)(n.li,{children:"(FF) C builds will fail if the dependency isn't there at build-time. Python won't."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Can we do this for R?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Get metadata from CRAN and update"}),"\n",(0,t.jsx)(n.li,{children:"Use skeleton to get the R dependencies. Grayskull doesn't handle R recipes yet."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Number of packages: 6k is Python, 2k is R. Between these two we'll have 80% of the ecosystem covered."}),"\n",(0,t.jsxs)(n.li,{children:["(MB) How should we handle information loss? Optional dependencies - maybe capture as a comment in the meta.yaml? Version bounds on the dependencies?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Optional dependencies - capture in extra section of info"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["(CJ, addendum) Mapping between conda-forge, pypi and imports: ",(0,t.jsx)(n.a,{href:"https://github.com/regro/cf-graph-countyfair/blob/master/mappings/pypi/name_mapping.yaml",children:"https://github.com/regro/cf-graph-countyfair/blob/master/mappings/pypi/name_mapping.yaml"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Note that the mapping is imperfect, since it relies on the conda-forge ",(0,t.jsx)(n.code,{children:"test: imports:"})," metadata."]}),"\n",(0,t.jsx)(n.li,{children:"It would be nice if we could get this directly from the package/source"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (KK) cudatoolkit package in conda-forge"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Still only ship pieces that are redistributable per the EULA (shared libraries)"}),"\n",(0,t.jsxs)(n.li,{children:["nvbug #: 3052604\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Internal NVIDIA system used for tracking these types of approvals"}),"\n",(0,t.jsxs)(n.li,{children:["Link (only works on NVIDIA intranet): ",(0,t.jsx)(n.a,{href:"http://nvbugs/3052604/",children:"http://nvbugs/3052604/"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["(KK) Approval to host the same version of cudatoolkit in conda-forge as is on defaults\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Maybe don't just copy the recipe from defaults. Or at least revisit"}),"\n",(0,t.jsx)(n.li,{children:"Would like to have a few Nvidia folks maintain the recipe. Over time migrate it to the CUDA team at Nvidia."}),"\n",(0,t.jsx)(n.li,{children:"(JK) Maybe use variants to maintain all of the versions in one branch"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"(JJ) What about cudnn? Can we move that over to CF?"}),"\n",(0,t.jsx)(n.li,{children:"(KK) All of the cuda libs should be shippable from CF. As long as we can show the EULA with pre-link or post-link. Internal at NVIDIA is fine with just having this as a pre-link script messaging mechanism."}),"\n",(0,t.jsxs)(n.li,{children:["(IF) Have you considered splitting up the recipe where all the different libraries end up in different conda installable units?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(KK) Yes that's the long term plan. Were trying to do the windows side. Their team is mostly focused on Linux."}),"\n",(0,t.jsx)(n.li,{children:"(JJ) If we do end up doing Windows, then make sure we have all of the windows versions. Strict channel priority is harmful if you have only one or two packages available versus default having many."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (CHL) FYI: conda 4.8.4 behavior change --- virtual package constraints now enforced"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Will definitely impact many CUDA packages (e.g., can no longer install CUDA 10-dependent packages on CUDA 9.x systems); e.g., ",(0,t.jsx)(n.a,{href:"https://github.com/conda/conda/issues/10152",children:"https://github.com/conda/conda/issues/10152"})]}),"\n",(0,t.jsx)(n.li,{children:"Will be working on solver messaging because errors are usually opaque and irrelevant"}),"\n",(0,t.jsx)(n.li,{children:"There's an env var that you can set to change conda's view on the cuda version: CONDA_OVERRIDE_CUDA"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"stuff-from-last-week-that-we-didnt-get-to",children:"Stuff from last week that we didn't get to"}),"\n",(0,t.jsx)(n.p,{children:"Who is taking these action items?"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," Dropping python 3.6\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"need an announcement cycle"}),"\n",(0,t.jsxs)(n.li,{children:["should we follow NEP29? NEP29 + 6 months?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://numpy.org/neps/nep-0029-deprecation_policy.html#drop-schedule",children:"https://numpy.org/neps/nep-0029-deprecation_policy.html#drop-schedule"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["End of life for Python 3.x versions:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://devguide.python.org/#status-of-python-branches",children:"https://devguide.python.org/#status-of-python-branches"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["No pypy for 3.7\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status",children:"https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Action Item: Send to issue (get input from pypy team and others)"}),"\n",(0,t.jsx)(n.li,{children:"(CJ) py36 should stick around until pypy comes out (it's in the near horizon). That's going to be soon, so it's not like we're keeping"}),"\n",(0,t.jsxs)(n.li,{children:["TODO: (ED) Python versions:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep 3 Python versions"}),"\n",(0,t.jsx)(n.li,{children:"Move off of old versions with the community moves (when scipy, matplotlib, numpy, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"We can keep an old version around temporarily if we need to (e.g., pypy doesnt have py37 yet)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,t.jsx)(n.h3,{id:"subteam-updates",children:"Subteam updates"}),"\n",(0,t.jsx)(n.h4,{id:"bot",children:"Bot"}),"\n",(0,t.jsx)(n.h4,{id:"arm",children:"ARM"}),"\n",(0,t.jsx)(n.h4,{id:"power",children:"POWER"}),"\n",(0,t.jsx)(n.h4,{id:"cuda",children:"CUDA"}),"\n",(0,t.jsx)(n.h4,{id:"docs",children:"Docs"}),"\n",(0,t.jsx)(n.h4,{id:"staged-recipes",children:"staged-recipes"}),"\n",(0,t.jsx)(n.h4,{id:"website",children:"website"}),"\n",(0,t.jsx)(n.h4,{id:"securitysystems",children:"security+systems"}),"\n",(0,t.jsx)(n.h3,{id:"ci-infrastructure",children:"CI infrastructure"}),"\n",(0,t.jsx)(n.h4,{id:"compiler-upgrade",children:"Compiler upgrade"}),"\n",(0,t.jsx)(n.h3,{id:"cfep-updates",children:"CFEP updates"}),"\n",(0,t.jsx)(n.h4,{id:"open-prs",children:"Open PRs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-enhancement-proposals/pull/7",children:"cfep-04"})," X11 and CDT policy"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"INACTIVE - Merge in with some inactive-esque status?"}),"\n",(0,t.jsx)(n.li,{children:"Needs new champion. Thanks for your work on this pkgw! Has unaddressed comments from pkgw as from Jan 10, 2020"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-enhancement-proposals/pull/9",children:"cfep-06"})," Staged-recipes review lifecycle"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"INACTIVE - Merge in with some inactive-esque status?"}),"\n",(0,t.jsx)(n.li,{children:"Lingering comment from @saraedum. @jakirkham, can you reply? Has unadressed comment from @saraedum from Jan 8, 2020"}),"\n",(0,t.jsx)(n.li,{children:"(MRB) The stalebot has solved the worst of the issues here. I think we could defer this one permanently."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-enhancement-proposals/pull/15",children:"cfep-10"})," Feedstock statuses, unmaintained"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"INACTIVE - Merge in with some inactive-esque status?"}),"\n",(0,t.jsx)(n.li,{children:"Needs another review. Has unaddressed updates from pkgw as of Jan 11, 2020"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/cfep/pull/23",children:"cfep-12"})," Removing packages that violate the terms of the source package"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Stalled since May 26, 2020"}),"\n",(0,t.jsx)(n.li,{children:'Active debate about moving to "broken" vs deleting from conda-forge channel'}),"\n",(0,t.jsx)(n.li,{children:"Active vote, ends on 2020-03-11"}),"\n",(0,t.jsx)(n.li,{children:"What were the results of the vote?"}),"\n",(0,t.jsx)(n.li,{children:"Did we hear back from NumFOCUS?"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/cfep/pull/32",children:"cfep-17"})," Handling pin backports and dependency rebuilds"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Stalled debate about implementation details between Isuru, CJ and Matt"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UPDATE 2020-07-22"}),": We in principle have agreement to render the extra pinnings needed directly in the feedstock\non a temporary basis (i.e., until the migration has ended)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"discussion",children:"Discussion"}),"\n",(0,t.jsx)(n.h2,{id:"check-in-on-previous-action-items",children:"Check in on previous action items"}),"\n",(0,t.jsx)(n.p,{children:"Copy previous action items from last meeting agenda."}),"\n",(0,t.jsx)(n.h3,{id:"this-meeting",children:"This meeting"}),"\n",(0,t.jsx)(n.h3,{id:"last-meeting",children:"Last meeting"}),"\n",(0,t.jsx)(n.h3,{id:"2-meetings-ago",children:"2 meetings ago"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Figure out how to communicate breaking changes to users. Likely should open up an issue immediately for futher discussion. Ping @kkraus, plus capture notes from further up in these meeting notes"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Eric) TODO: Make strict an option in conda_forge.yaml and turn it on by default. Open issue in conda-smithy"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-meetings-ago",children:"3 meetings ago"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Eric to add a new page to our docs around how to engage with conda-forge and affiliated in a commercial relationship."]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," Eric will get the NVBug link from Keith and archive it in the conda-forge google drive."]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," John K. will update the cuda toolkit feedstock on the git repo to note the NVBug link to the internal NVIDIA issue tracker"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Jonathan will update docs to note that some non-exhaustive list of packages (like cuda-toolkit, MKL, etc.)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Jonathan will review this ",(0,t.jsx)(n.a,{href:"https://github.com/AnacondaRecipes/cudatoolkit-feedstock/pull/7",children:"PR"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"move-to-issue-tracker",children:"Move to Issue Tracker"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Kale) schedule conda working group"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," cfep-10 next steps: CJ to call a vote for feedback"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," cfep-06 next steps: Ask staged recipes team to champion this CFEP and move it forward"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," jakirkham & CJ-wright to sync on adding CUDA to the migration bot"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Eric) Scheduling Anaconda <-> conda-forge sync on anaconda.org requirements gathering\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Will try and get this scheduled in the next month."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Anthony) Reach out to NumFocus to figure out legal ramifications of not including licenses in files."]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Eric) check internally for funding levels for hotels & flying folks from the community in?"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (Eric) Figure out finances of conda-forge to support themselves?"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (jjhelmus) Open up CFEP for which python's we're going to support"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (jakirkham) write a blog post on CUDA stuff we discussed today"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (jakirkham) update docs on how to add CUDA support to feedstocks"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (jakirkham) will open an issue on conda-smithy to investigate Drone issues. (ping the aarch team)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/954",children:"https://github.com/conda-forge/conda-forge.github.io/issues/954"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (ED) Who we are page? Some combination of a FAQ and a who is everyone. FAQ things like:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"who's the POC for CF <> Anaconda, CF <> NumFocus, CF <> Azure"}),"\n",(0,t.jsx)(n.li,{children:"who's the POC for the various subteams?"}),"\n",(0,t.jsx)(n.li,{children:"Informal information: roles, day jobs, bios, the whole nine yards, why you're here, etc."}),"\n",(0,t.jsx)(n.li,{children:"Public or internal? I don't really care either way. Anyone feel strongly one way or the other?"}),"\n",(0,t.jsx)(n.li,{children:"opt-in to public bios"}),"\n",(0,t.jsxs)(n.li,{children:["software carpentry has a large number of instructors and has ",(0,t.jsx)(n.a,{href:"https://carpentries.org/instructors",children:"https://carpentries.org/instructors"})]}),"\n",(0,t.jsx)(n.li,{children:'some concern about "yet another place to keep stuff up to date"'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (CJ) Form finance subteam"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (ED) document strategies for reproducible environments using conda-forge"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (UK) Static libraries stuff\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Add linting hints to builds to find them"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," Recommend how to package them -> CFEP-18"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," We should write docs saying we don't provide support and this is a bad idea. -> CFEP-18"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(96540);const t={},l=i.createContext(t);function a(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);