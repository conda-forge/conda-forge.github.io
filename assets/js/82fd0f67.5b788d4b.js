"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[47528],{87317:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"minutes/2024-03-20","title":"2024-03-20","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2024-03-20.md","sourceDirName":"minutes","slug":"/minutes/2024-03-20","permalink":"/community/minutes/2024-03-20","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2024-03-20.md","tags":[{"inline":true,"label":"meeting-notes","permalink":"/community/tags/meeting-notes"}],"version":"current","lastUpdatedAt":1748283961000,"frontMatter":{"tags":["meeting-notes"],"title":"2024-03-20"},"sidebar":"community","previous":{"title":"2024-04-03","permalink":"/community/minutes/2024-04-03"},"next":{"title":"2024-03-06","permalink":"/community/minutes/2024-03-06"}}');var t=s(74848),d=s(28453);const l={tags:["meeting-notes"],title:"2024-03-20"},r="conda-forge core meeting 2024-03-20",c={},o=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"conda-forge-core-meeting-2024-03-20",children:"conda-forge core meeting 2024-03-20"})}),"\n",(0,t.jsxs)(n.p,{children:["Add new agenda items under the ",(0,t.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://hackmd.io/#REPLACE_ME#",children:"Last week's meeting"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Initials"}),(0,t.jsx)(n.th,{children:"GitHub ID"}),(0,t.jsx)(n.th,{children:"Affiliation"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Wolf Vollprecht"}),(0,t.jsx)(n.td,{children:"WV"}),(0,t.jsx)(n.td,{children:"wolfv"}),(0,t.jsx)(n.td,{children:"prefix.dev"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Filipe Fernandes"}),(0,t.jsx)(n.td,{children:"FF"}),(0,t.jsx)(n.td,{children:"ocefpaf"}),(0,t.jsx)(n.td,{children:"conda-forge"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Daniel Ching"}),(0,t.jsx)(n.td,{children:"DJC"}),(0,t.jsx)(n.td,{children:"carterbox"}),(0,t.jsx)(n.td,{children:"Argonne"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Jaime Rodr\xedguez-Guerra"}),(0,t.jsx)(n.td,{children:"JRG"}),(0,t.jsx)(n.td,{children:"jaimergp"}),(0,t.jsx)(n.td,{children:"Quansight/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Cheng H. Lee"}),(0,t.jsx)(n.td,{children:"CHL"}),(0,t.jsx)(n.td,{children:"chenghlee"}),(0,t.jsx)(n.td,{children:"Anaconda/c-f"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"John Kirkham"}),(0,t.jsx)(n.td,{children:"JK"}),(0,t.jsx)(n.td,{children:"jakirkham"}),(0,t.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Nichita Morcotilo"}),(0,t.jsx)(n.td,{children:"NM"}),(0,t.jsx)(n.td,{children:"nichmor"}),(0,t.jsx)(n.td,{children:"prefix.dev"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Klaus Zimmermann"}),(0,t.jsx)(n.td,{children:"KZ"}),(0,t.jsx)(n.td,{children:"zklaus"}),(0,t.jsx)(n.td,{children:"Quansight"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marius van Niekerk"}),(0,t.jsx)(n.td,{children:"MvN"}),(0,t.jsx)(n.td,{children:"mariusvniekerk"}),(0,t.jsx)(n.td,{children:"Voltron Data/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Isuru Fernando"}),(0,t.jsx)(n.td,{children:"IF"}),(0,t.jsx)(n.td,{children:"isuruf"}),(0,t.jsx)(n.td,{children:"Quansight"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Matthew R Becker"}),(0,t.jsx)(n.td,{children:"MRB"}),(0,t.jsx)(n.td,{children:"beckermr"}),(0,t.jsx)(n.td,{children:"cf"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"X people total"}),"\n",(0,t.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JRG: ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-smithy/pull/1756",children:"New JSON Schema for conda-forge.yml"})," (automated linting + ",(0,t.jsx)(n.a,{href:"https://deploy-preview-2095--conda-forge-previews.netlify.app/docs/maintainer/conda_forge_yml/",children:"docs"}),"!)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Deployed seems to be working. May have little tweaks here and there"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JRG: ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/2096",children:"New supporters"}),".\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.covalentbonds.com/resources/utm-tags-gdpr-data-privacy-codes-made-easy",children:"Doesn't violate GPDR"})," but still prefer not to have it."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," DJC: Multi-output and removing static libs from packages as per CFEP-18\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Have begun opening PRs to remove static libraries and reduce the size of run_exports from packages in my dependency tree by creating soname (shared-library only) outputs\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"examples: libdav1d, libavif, cairo, jpeg-turbo, freetype"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Tried to streamline / make it easier to craft multi-output recipes using an install script, but it's still clunky and requires too many changes\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://gist.github.com/carterbox/188ac74647e703cfa6700b58b076d712",children:"https://gist.github.com/carterbox/188ac74647e703cfa6700b58b076d712"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Going to try to upstream better support for package splitting to conda-build\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda/conda-build/pull/5216",children:"https://github.com/conda/conda-build/pull/5216"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,t.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JK: CUDA 11.2 Deprecation\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/2098",children:"https://github.com/conda-forge/conda-forge.github.io/pull/2098"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JK: CUDA 11.8 Support\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Docker image support plan\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://gitlab.com/nvidia/container-images/cuda/-/blob/master/doc/container_tags.pdf?ref_type=heads",children:"https://gitlab.com/nvidia/container-images/cuda/-/blob/master/doc/container_tags.pdf?ref_type=heads"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"The 550 driver (last driver to support CUDA 11.8) is EOL early next year"}),"\n",(0,t.jsx)(n.li,{children:"CUDA 11.8 support would drop off soon after"}),"\n",(0,t.jsx)(n.li,{children:"Docker image support plan notes 2 CUDA versions would be supported at a time. So 11.8 would stick around until 13 is added."}),"\n",(0,t.jsx)(n.li,{children:"Would be good to start signaling this soon to users and maintainers"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JK: Close out CUDA 12 migration\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/5390#issuecomment-1986705958",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/5390#issuecomment-1986705958"})}),"\n",(0,t.jsxs)(n.li,{children:["Discussed CUDA 12.0 & 12.4 are added in the same PR\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provides oldest supported CUDA 12"}),"\n",(0,t.jsx)(n.li,{children:"Also asked if add CUDA 12.x latest would be alright to have latest features. Would also save maintainers handling another migration."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JK: GLIBC 2.28\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["HV: Mainly needs decision about which ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/cdt-builds/issues/66#issuecomment-1833417828",children:"CDTs"})," to keep/replace for X11/Gnome/Graphic Stack\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"/usr/lib/x86_64-linux-gnu/libGLX_indirect.so.0"}),"\n",(0,t.jsx)(n.li,{children:"/usr/lib/x86_64-linux-gnu/libGLX_mesa.so.0"}),"\n",(0,t.jsx)(n.li,{children:"/usr/lib/x86_64-linux-gnu/libGLX_mesa.so.0.0.0"}),"\n",(0,t.jsx)(n.li,{children:"/usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.0"}),"\n",(0,t.jsx)(n.li,{children:"/usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.545.23.08"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"EL 8 has new RPM location (relative to 7). So we need to handle"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," JK: Roadmap\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"NF planning to make changes to their funding model to make it possible to recieve work contracts."}),"\n",(0,t.jsx)(n.li,{children:"As part of this it would help if we can build up a wishlist of items that we would like to accomplish"}),"\n",(0,t.jsx)(n.li,{children:"JRG: Looked over the old list before. Some were done. Some were in-progress. So may want new list. Still things we could do (as always). Will think about these"}),"\n",(0,t.jsx)(n.li,{children:"JK: Would be good if we can all think about what items we would like to do and discuss in a future meeting"}),"\n",(0,t.jsx)(n.li,{children:"JRG: Timeline?"}),"\n",(0,t.jsx)(n.li,{children:"JK: Long-term change in NF over a few years. So no race. Just starting the process is most helpful. Maybe we can discuss in a future meeting."}),"\n",(0,t.jsx)(n.li,{children:"JRG: Could have a dedicated meeting for this"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," HV: Windows Fortran ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/1359",children:"migration"})," for flang 18?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["flang 17 was too experimental, but flang 18 should be stable enough; would solve a bunch of painpoints, e.g. ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/compilers-feedstock/issues/58",children:"compilers"}),", coin-or ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/coin-or-cbc-feedstock/issues/3",children:"stack"}),", openblas+openmp on ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/openblas-feedstock/pull/115",children:"win"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Pinning ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/1359",children:"PR"})," should be unblocked now that we can use ",(0,t.jsx)(n.code,{children:"platform_allowlist:"})," for migrators (to restrict to windows in this case)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," HV: Stdlib migration announcement (",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/2126",children:"PR"})," / ",(0,t.jsx)(n.a,{href:"https://deploy-preview-2126--conda-forge-previews.netlify.app/news/",children:"preview"}),")\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Will try to start ASAP after conda-build 24.3 is available and last details fixed."}),"\n",(0,t.jsxs)(n.li,{children:["May need to rework ",(0,t.jsxs)(n.a,{href:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/blob/1391177be1b88e7a11df0b824ce6a3e7bcccdb27/recipe/download_osx_sdk.sh",children:["this ",(0,t.jsx)(n.code,{children:"conda-forge-ci-setup"})," macOS logic"]})]}),"\n",(0,t.jsxs)(n.li,{children:["Added to tracking ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/2102",children:"issue"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," WV: pixi release (\ud83c\udf89) - we want to do user interviews if anyone is interested\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Highlights: tasks that can be skipped, mirrors + OCI registry, bug fixes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const t={},d=i.createContext(t);function l(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);