"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[82005],{26478:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var i=s(74848),t=s(28453);const l={title:"2023-04-19"},d="conda-forge core meeting 2023-04-19",c={id:"minutes/2023-04-19",title:"2023-04-19",description:"Add new agenda items under the Your new() agenda items heading",source:"@site/community/minutes/2023-04-19.md",sourceDirName:"minutes",slug:"/minutes/2023-04-19",permalink:"/community/minutes/2023-04-19",draft:!1,unlisted:!1,editUrl:"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2023-04-19.md",tags:[],version:"current",lastUpdatedAt:1732328727e3,frontMatter:{title:"2023-04-19"},sidebar:"community",previous:{title:"2023-05-03",permalink:"/community/minutes/2023-05-03"},next:{title:"2023-04-05",permalink:"/community/minutes/2023-04-05"}},r={},o=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(n){const e={a:"a",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"conda-forge-core-meeting-2023-04-19",children:"conda-forge core meeting 2023-04-19"})}),"\n",(0,i.jsxs)(e.p,{children:["Add new agenda items under the ",(0,i.jsx)(e.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://hackmd.io/#REPLACE_ME#",children:"Last week's meeting"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{children:"Initials"}),(0,i.jsx)(e.th,{children:"GitHub ID"}),(0,i.jsx)(e.th,{children:"Affiliation"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Jaime Rodr\xedguez-Guerra"}),(0,i.jsx)(e.td,{children:"JRG"}),(0,i.jsx)(e.td,{children:"jaimergp"}),(0,i.jsx)(e.td,{children:"Quansight/cf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Cheng H. Lee"}),(0,i.jsx)(e.td,{children:"CHL"}),(0,i.jsx)(e.td,{children:"chenghlee"}),(0,i.jsx)(e.td,{children:"conda-forge/Anaconda"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"John Kirkham"}),(0,i.jsx)(e.td,{children:"JK"}),(0,i.jsx)(e.td,{children:"jakirkham"}),(0,i.jsx)(e.td,{children:"conda-forge/NVIDIA"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Marcel Bargull"}),(0,i.jsx)(e.td,{children:"MB"}),(0,i.jsx)(e.td,{children:"mbargull"}),(0,i.jsx)(e.td,{children:"Bioconda/cf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Filipe Fernandes"}),(0,i.jsx)(e.td,{children:"FF"}),(0,i.jsx)(e.td,{children:"ocefpaf"}),(0,i.jsx)(e.td,{children:"conda-forge"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Jannis Leidel"}),(0,i.jsx)(e.td,{children:"JL"}),(0,i.jsx)(e.td,{children:"jezdez"}),(0,i.jsx)(e.td,{children:"Anaconda/conda-forge"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{}),(0,i.jsx)(e.td,{})]})]})]}),"\n",(0,i.jsx)(e.p,{children:"X people total"}),"\n",(0,i.jsx)(e.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"[ ]"}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,i.jsx)(e.code,{children:"__new__()"})," agenda items"]}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) Windows ARM64\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["(SD) Working on new Windows ARM hardware\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"like Surface Pro X"}),"\n",(0,i.jsx)(e.li,{children:"CPython building on Windows ARM (tier 3)"}),"\n",(0,i.jsx)(e.li,{children:"Currently GHA doesn't have native Windows ARM support"}),"\n",(0,i.jsxs)(e.li,{children:["How to enable developers?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Interested in enabling conda-forge to build packages"}),"\n",(0,i.jsx)(e.li,{children:"Easy to give resources to one org (conda-forge fits the bill)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["What would be needed?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Dev time (Finn dev w/Steve would be contributing)"}),"\n",(0,i.jsxs)(e.li,{children:["Hardware?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Easiest path: ",(0,i.jsx)(e.a,{href:"https://azure.microsoft.com/en-us/products/dev-box/",children:"https://azure.microsoft.com/en-us/products/dev-box/"})]}),"\n",(0,i.jsx)(e.li,{children:"Could also ship physical machines"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"Can cross-compile (have cross-compilers)"}),"\n",(0,i.jsxs)(e.li,{children:["(MRB) Does LIEF work on Windows ARM?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"(SD) Ordinary PE with another instruction set"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"(JRG/MRB) Migrator? Doable"}),"\n",(0,i.jsxs)(e.li,{children:["(JRG) Constructor stack? NSIS, pyinstaller (conda-standalone)\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"SD: x86 installers should work"}),"\n",(0,i.jsx)(e.li,{children:'JRG: We need changes in constructor to support "cross-installers", but not too complicated (export CONDA_SUBDIR?)'}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["ED: what's needed?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:'1 or more "core sponsor(s)" of the work that can ensure things aren\'t block\non the CF side'}),"\n",(0,i.jsx)(e.li,{children:"someone that provides hardware"}),"\n",(0,i.jsx)(e.li,{children:"someone that has the time to hack on this problem"}),"\n",(0,i.jsx)(e.li,{children:"someone at Anaconda that can help push changes into the\nvarious tools that need to be updated to support the new platform"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Thoughts? :)\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["(JL) Introducing new platform is non-trivial\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Want to make sure this is somehow funded"}),"\n",(0,i.jsx)(e.li,{children:"Maybe NF as a conduit (SDG or ...?) for Conda / cf"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(MRB) How did we do this in the past (aarch64, pp64le, OSX arm)?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["(IF) Linux aarch64 was Jonathan Helmus ( ",(0,i.jsx)(e.a,{href:"https://github.com/jjhelmus",children:"https://github.com/jjhelmus"})," ) starting with Rasberry Pi and going from there"]}),"\n",(0,i.jsx)(e.li,{children:"(IF) Can bootstrap"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"(JL)"}),"\n",(0,i.jsx)(e.li,{children:"(IF) Keeping things green (once a package works we'd like it to keep working)"}),"\n",(0,i.jsx)(e.li,{children:"(IF) A few more Azure jobs? Particularly if Windows ARM supports multiple version"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"(MRB) Cross-compiling is probably most efficient approach (like what MacOS ARM uses)"}),"\n",(0,i.jsxs)(e.li,{children:["(MRB) ",(0,i.jsx)(e.del,{children:"Let's create a"})," tracking issue\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1940",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1940"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(CHL) Tracking ecosystem support as ",(0,i.jsx)(e.a,{href:"https://github.com/conda/conda/issues/11472",children:"conda/conda#11472"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["PR ",(0,i.jsx)(e.a,{href:"https://github.com/conda/conda/pull/11778",children:"conda/conda#11778"}),": add ",(0,i.jsx)(e.code,{children:"win-arm64"})," as platform in ",(0,i.jsx)(e.code,{children:"conda"})]}),"\n",(0,i.jsxs)(e.li,{children:["PR ",(0,i.jsx)(e.a,{href:"https://github.com/conda/conda-build/pull/4579",children:"conda/conda-build#4579"}),": add ",(0,i.jsx)(e.code,{children:"win-arm64"})," as platform in ",(0,i.jsx)(e.code,{children:"conda-build"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://github.com/ContinuumIO/anaconda-issues/issues/12957",children:"ContinuumIO/anaconda-issues#12957"}),": add ",(0,i.jsx)(e.code,{children:"win-arm64"})," as platform in anaconda.org"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) New CTK packages / CUDA 12\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Most packages up (few remaining / some follow up items)"}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"cuda-version"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/cudatoolkit-feedstock/pull/89",children:"https://github.com/conda-forge/cudatoolkit-feedstock/pull/89"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/435",children:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/435"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Opening CUDA 12 migrator\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Package layout changes:\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Document?"}),"\n",(0,i.jsx)(e.li,{children:"Message?"}),"\n",(0,i.jsx)(e.li,{children:"Incremental rollout?"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(Longer-term) CUDA 11 backport?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"New style packages on older CUDA versions"}),"\n",(0,i.jsxs)(e.li,{children:["What version to start with (",(0,i.jsx)(e.code,{children:"nvidia"})," channel has ",(0,i.jsx)(e.code,{children:"11.4"}),")?"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"cudatoolkit"})," becomes metapackage?"]}),"\n",(0,i.jsxs)(e.li,{children:["Potential to drop some CUDA specific things\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Docker images"}),"\n",(0,i.jsx)(e.li,{children:"conda-forge-ci-setup simplification"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Bump to GCC 12 / LLVM 15 (should not be controversial, just needs a merge)\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4215",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4215"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) RHEL 8-compatible sysroot (most likely AlmaLinux, matching ",(0,i.jsx)(e.a,{href:"https://github.com/pypa/manylinux/issues/1282",children:"manylinux_2_28"}),")\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["sync requirements / naming with Anaconda (once aligned, I'll try to start raising PRs)\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["(CHL) Anaconda naming convention is ",(0,i.jsx)(e.code,{children:"sysroot_${subdir}=${glibc_version}"})," (so probably ",(0,i.jsx)(e.code,{children:"sysroot_linux-64=2.28"}),")"]}),"\n",(0,i.jsx)(e.li,{children:'use cdt_name = "conda_2_28"'}),"\n",(0,i.jsx)(e.li,{children:"pull CDTs out of alma8"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["see Matthew's initial ",(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1432#issuecomment-1512315951",children:"TODO list"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Boost harmonization\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Can we agree on the plan in ",(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/boost-cpp-feedstock/issues/137",children:"https://github.com/conda-forge/boost-cpp-feedstock/issues/137"}),"?"]}),"\n",(0,i.jsx)(e.li,{children:"If so, I can start raising PRs"}),"\n",(0,i.jsx)(e.li,{children:"agreed to plan with name libboost-python for anaconda py-boost and conda-forge boost"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," (WV) rattler-build - new conda package build tool: ",(0,i.jsx)(e.a,{href:"https://github.com/prefix-dev/rattler-build",children:"https://github.com/prefix-dev/rattler-build"})]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," (JK) New CTK packages / CUDA 12\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Opening CUDA 12 migrator\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Package layout changes:\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Document?"}),"\n",(0,i.jsx)(e.li,{children:"Message?"}),"\n",(0,i.jsx)(e.li,{children:"Incremental rollout?"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(Longer-term) CUDA 11 backport?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"New style packages on older CUDA versions"}),"\n",(0,i.jsxs)(e.li,{children:["What version to start with (",(0,i.jsx)(e.code,{children:"nvidia"})," channel has ",(0,i.jsx)(e.code,{children:"11.4"}),")?"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"cudatoolkit"})," becomes metapackage?"]}),"\n",(0,i.jsxs)(e.li,{children:["Potential to drop some CUDA specific things\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Docker images"}),"\n",(0,i.jsx)(e.li,{children:"conda-forge-ci-setup simplification"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"[ ]"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>d,x:()=>c});var i=s(96540);const t={},l=i.createContext(t);function d(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:d(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);