"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[76653],{14255:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"minutes/2016-07-22","title":"2016-07-22","description":"Time00 UTC","source":"@site/community/minutes/2016-07-22.md","sourceDirName":"minutes","slug":"/minutes/2016-07-22","permalink":"/community/minutes/2016-07-22","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2016-07-22.md","tags":[],"version":"current","lastUpdatedAt":1761668481000,"frontMatter":{"title":"2016-07-22"},"sidebar":"community","previous":{"title":"2016-08-12","permalink":"/community/minutes/2016-08-12"},"next":{"title":"2016-06-24","permalink":"/community/minutes/2016-06-24"}}');var o=s(74848),t=s(28453);const r={title:"2016-07-22"},c="2016-07-22: General discussion",l={},h=[];function a(n){const e={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",s:"s",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"2016-07-22-general-discussion",children:"2016-07-22: General discussion"})}),"\n",(0,o.jsx)(e.p,{children:"Time: 14:00 UTC"}),"\n",(0,o.jsxs)(e.p,{children:["Hangout link: ",(0,o.jsx)(e.a,{href:"https://hangouts.google.com/call/v5olhwzpfzgzpoq5i3wthjpqpie"}),(0,o.jsx)(e.a,{href:"https://hangouts.google.com/call/v5olhwzpfzgzpoq5i3wthjpqpie",children:"https://hangouts.google.com/call/v5olhwzpfzgzpoq5i3wthjpqpie"})]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Attendees"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://conda-forge.hackpad.com/ep/profile/wv6uvIZX6h0",children:"John Kirkham"})}),"\n",(0,o.jsx)(e.p,{children:"Jonathan Helmus"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://conda-forge.hackpad.com/ep/profile/yBvjHx0Ad3Y",children:"Matt Craig"})}),"\n",(0,o.jsx)(e.p,{children:"Phil Elson"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://conda-forge.hackpad.com/ep/profile/yHQTJXZ4gyS",children:"Michael Sarahan"})}),"\n",(0,o.jsx)(e.p,{children:"Filipe"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Standing items"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"How many repos?"}),"\n",(0,o.jsx)(e.li,{children:"How many contributors?"}),"\n",(0,o.jsx)(e.li,{children:"New core devs?"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Agenda"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Governance/mechanism for formally proposing and deciding on enhancements."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Motivation:  Without a formal governance model it is difficult for the conda-forge  community to reach final decisions.  There is no designated place to  propose changes in, e.g. compiler infrastructure or whether to run or  not to run a package's unit tests, so these end up being scattered  across pull requests and issues.\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Governance models:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"    *   The Python model: BDFL + PEPs\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["The Jupyter model: BDFL + Steering Council + JEPs: ",(0,o.jsx)(e.a,{href:"https://github.com/jupyter/governance"}),(0,o.jsx)(e.a,{href:"https://github.com/jupyter/governance",children:"https://github.com/jupyter/governance"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["The  astropy model: Coordinating Committee + APEs: ",(0,o.jsx)(e.a,{href:"https://github.com/astropy/astropy-APEs"}),(0,o.jsx)(e.a,{href:"https://github.com/astropy/astropy-APEs",children:"https://github.com/astropy/astropy-APEs"})," and ",(0,o.jsx)(e.a,{href:"http://www.astropy.org/about.html"}),(0,o.jsx)(e.a,{href:"http://www.astropy.org/about.html",children:"http://www.astropy.org/about.html"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["IPEP : ",(0,o.jsx)(e.a,{href:"https://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Templatehttps://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Template"}),(0,o.jsx)(e.a,{href:"https://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Templatehttps://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Template",children:"https://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Templatehttps://github.com/ipython/ipython/wiki/IPEP-0:-IPEP-Template"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["numpy governance: ",(0,o.jsx)(e.a,{href:"http://docs.scipy.org/doc/numpy-dev/dev/governance/governance.html"}),(0,o.jsx)(e.a,{href:"http://docs.scipy.org/doc/numpy-dev/dev/governance/governance.html",children:"http://docs.scipy.org/doc/numpy-dev/dev/governance/governance.html"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"All of these models have a mechanism for enhancement proposals, so how about creating: github.com/conda-forge/conda-forge-enhancement-proposals"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["SciPy sprint: ",(0,o.jsx)(e.a,{href:"https://trello.com/b/KURmGkly/conda-forge-scipy-sprint"}),(0,o.jsx)(e.a,{href:"https://trello.com/b/KURmGkly/conda-forge-scipy-sprint",children:"https://trello.com/b/KURmGkly/conda-forge-scipy-sprint"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["conda-forge code of conduct doc: ",(0,o.jsx)(e.a,{href:"https://docs.google.com/document/d/10dxX0Zse0Rx1HqsxC73Wfsghmy5m8PP8cHuBIOhWKpc/edit"}),(0,o.jsx)(e.a,{href:"https://docs.google.com/document/d/10dxX0Zse0Rx1HqsxC73Wfsghmy5m8PP8cHuBIOhWKpc/edit",children:"https://docs.google.com/document/d/10dxX0Zse0Rx1HqsxC73Wfsghmy5m8PP8cHuBIOhWKpc/edit"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Discuss some guidelines to contact the authors"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Feedstocks philosophy:  Explicit vs implicit / reproducible vs redundant"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"OSX - getting back to a usable, coherent, stack"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   libc++ (clang) vs libstdc++ (gcc/g++)\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Minimum OSX required for clang (10.8, I think?)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Actually clang is usable beginning in 10.7. So, this would be viable given your compatibility constraints."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Also, all the refs I have seen suggest that this will still have C++11 support."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Compatibility  with defaults (built on 10.7, uses gcc) - where will people break?  I  think only if mixing packages - how do we assure that we have all the  ones we need?"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Improving infrastructure"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Travis CI API issues\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Finish out GitHub API issues"}),"\n",(0,o.jsx)(e.li,{children:"Better workflows with staged-recipes"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Low level packaging"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Basic community practices when PR-ing to staged-recipes."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"No need to re-discuss this. I am still writing the docs and, if ready, I will send the link tomorrow (or after SciPy ;-)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["NetCDF (",(0,o.jsx)(e.s,{children:"also curl/ca-certificates and Perl packages"}),") - Done?"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   curl and ca-certificates are done and available. \n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Perl is no longer relevant as part of this process"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Notifications (how do we stay on top of them)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Standardizing installs"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Mention [`toolchain`](https://github.com/conda-forge/toolchain-feedstock) .\n\n        *   Discuss rollout to feedstocks.\n\n*   Get feedback on [`python-toolchain`](https://github.com/conda-forge/staged-recipes/pull/642) \n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"MSYS2"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Available on defaults - was in conda 4.1.7, but that was pulled.  Coming in 4.1.8.\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Discussing Ray Donnelly's work on MSYS2 packages and how we want to use and integrate these into conda-forge."}),"\n",(0,o.jsx)(e.li,{children:"Some use cases to consider OpenBLAS, FFTW, build tools, others?"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Binary data"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Do we include it in recipes?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"What kinds do we allow if any (e.g. icons)?"}),"\n",(0,o.jsx)(e.li,{children:"How do we verify the licensing?"}),"\n",(0,o.jsx)(e.li,{children:"How do we verify that they are safe?"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"OpenBLAS (on Windows)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Dev releases: Where do they happen?"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Do we do them at conda-forge?\n\n        *   Maybe add a label.\n\n*   Do we let others do them with a feedstock on their own repo?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"How do we enforce whatever we decide?"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Conda-forge installer"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   We have Python 3.5, and 3.4 now. Would be nice to have 2.7.\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Have everything. Though ",(0,o.jsx)(e.code,{children:"conda-build"})," needs some work."]}),"\n",(0,o.jsxs)(e.li,{children:["Repo for installer exists, but many questions remain open. ( ",(0,o.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-anvil"}),(0,o.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-anvil",children:"https://github.com/conda-forge/conda-forge-anvil"})," )"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Channel mirroring"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Can this point be a little bit explained? I thought about this as well and would like to contribute to this point.\n\n        *   Eric Dill has put together a script for copying a package from one channel to another here: [conda forge/conda forge.github.io#134](https://github.com/conda-forge/conda-forge.github.io/pull/134)\n*   I have a really, really crude script that copies all of the packages in one channel to another that I just put at: [](https://gist.github.com/mwcraig/8473cf840f6d29236d6d8af699404555)[https://gist.github.com/mwcraig/8473cf840f6d29236d6d8af699404555](https://gist.github.com/mwcraig/8473cf840f6d29236d6d8af699404555)\n*   conda-build-all can copy from one channel to another: `conda build-all --inspect-channels conda-forge --upload-channels astropy some_packge_recipe` will copy the `some_package`  from the channel conda-forge to  astropy if it can, or build it if it  doesn't exist on conda-forge. Discussion  about what the desired  behavior should be has started at: [SciTools/conda build all#46](https://github.com/SciTools/conda-build-all/issues/46)\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Feedstock history"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Is it sacred?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Do we rebase/force push?"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"    *   If so, under what conditions?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"How do we avoid multiple people doing this simultaneously?"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"        *   I don't think you can.\n\n*   IMHO,  if it's just one author in staged recipes, sure.  If feedstock, no  force push - only to PRs to feedstock.  If people don't mind merge PRs,  it sure is a lot simpler to not rebase.  I have messed up rebasing a few  times recently... =(\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Docker hosting solution"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Docker Hub builds were broken for a week and a half.\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Have switched to quay.io currently."}),"\n",(0,o.jsx)(e.li,{children:"Mirroring quay.io image on Docker Hub."}),"\n",(0,o.jsx)(e.li,{children:"Thoughts about quay.io? Thoughts about hosting in general?"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Continuum metadata request: can we add these to linter?"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   example metadata: [](https://github.com/ContinuumIO/anaconda-recipes/blob/master/anaconda-build/meta.yaml#L36-L44)[https://github.com/ContinuumIO/anaconda-recipes/blob/master/anaconda-build/meta.yaml#L36-L44](https://github.com/ContinuumIO/anaconda-recipes/blob/master/anaconda-build/meta.yaml#L36-L44)\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Also, distinguish summary (limit of 77 or 80 chars) from description (unlimited)"}),"\n",(0,o.jsx)(e.li,{children:"Anaconda  verify: would be nice to meet in the middle, rather than diverge.   conda-build may integrate anaconda-verify, would be nice if conda-forge  added metadata here."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Google    hangouts has a max capacity of 10. Is it worth considering other    methods of communication so everyone who wants to participate can?"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Maybe this ( ",(0,o.jsx)(e.a,{href:"http://www.freeconferencecalling.com/"}),(0,o.jsx)(e.a,{href:"http://www.freeconferencecalling.com/",children:"http://www.freeconferencecalling.com/"})," ) is an option."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Bluejeans"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Continuum has webex.  Past experience is that some Linux platforms had trouble connecting"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Drop numpy 1.10 and reduce our build matrix. (Numba now works with numpy 1.11.)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["This comment from the PR for graphviz is the best summary I've seen: ",(0,o.jsx)(e.a,{href:"https://github.com/conda-forge/staged-recipes/pull/568",children:"conda forge/staged recipes#568"}),"#issuecomment-225315370"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Thanks for pointing this out. The described solution looks reasonable and is preferable to prefixing package names. Great!"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"What is the benefit?"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Will   we distinguish between libs and standalone tools, similar to Debian? I   would strongly suggest to do this, because it is (1) established and  (2)  more accessible for the user (if he wants to use a library, he  knows  the language. If he wants to use a standalone, he doesn't care).",(0,o.jsx)(e.a,{href:"https://www.debian.org/doc/packaging-manuals/python-policy/ch-module_packages.html#s-package_names",children:" ( "}),(0,o.jsx)(e.a,{href:"https://www.debian.org/doc/packaging-manuals/python-policy/ch-module_packages.html#s-package_names"}),")",(0,o.jsx)(e.a,{href:"https://www.debian.org/doc/packaging-manuals/python-policy/ch-module_packages.html#s-package_names",children:"https://www.debian.org/doc/packaging-manuals/python-policy/ch-module_packages.html#s-package_names)"}),(0,o.jsx)(e.a,{href:"https://www.debian.org/doc/packaging-manuals/python-policy/ch-module_packages.html#s-package_names",children:" "})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Will   there be an orchestrated move? If not, how do we deal with   inconsistencies and potential conflicts (installing both python-h5py  and  h5py)."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   we will probably go with meta-packages for conflicting packages\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Signing packages"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Should be easy to do. ( ",(0,o.jsx)(e.a,{href:"http://conda.pydata.org/docs/signed-packages.html"}),(0,o.jsx)(e.a,{href:"http://conda.pydata.org/docs/signed-packages.html",children:"http://conda.pydata.org/docs/signed-packages.html"})," )"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"There has been some interest previously."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"HTTPError: 503 Server Error: Service Unavailable: Back-end server is at capacity for url..."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Seems we are regularly running into this issue under normal usage conditions."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Had discussed previously caching packages on AppVeyor and trying to reuse those to start."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Maybe we need to consider caching on all CIs."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Building our own Miniconda-like self-extracting scripts with packages via ",(0,o.jsx)(e.a,{href:"https://github.com/conda/constructor",children:(0,o.jsx)(e.code,{children:"constructor"})}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"There  have been improvements on Continuum's side that should help this.  In  short, repodata (the package index for a given channel) was being  generated for each anaconda.org query.  This was unnecessarily high  cost, and some caching schemes have been implemented."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Handling removal of unpinned/improperly pinned packages."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Has been done manually thus far."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"This doesn't scale well though."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Should we (semi) automate removal?"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Should we hot-fix broken packages? ( ",(0,o.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/170",children:"conda forge/conda forge.github.io#170"})," )"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Travis CI API unreliability"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,o.jsxs)(e.ul,{children:[(0,o.jsx)(e.li,{children:"873 repositories, 171 people"}),"\n",(0,o.jsx)(e.li,{children:"Discussion of adding new core-devs and onboarding new contributors"}),"\n",(0,o.jsxs)(e.li,{children:["Governance/Enhancements proposals\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"https://github.com/ipython/ipython/wiki/IPEPs:-IPython-Enhancement-Proposals"}),(0,o.jsx)(e.a,{href:"https://github.com/ipython/ipython/wiki/IPEPs:-IPython-Enhancement-Proposals",children:"https://github.com/ipython/ipython/wiki/IPEPs:-IPython-Enhancement-Proposals"})]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Want place to move longer technical discussions which will eventually move to decision"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Use cases for enhancements proposals from the past"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   compiler decisions (one per OS)\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"CentOS 5 vs 6"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Enhancements vs how decisions are made"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   core group which votes on the issue?  Others from the community?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"proposal should provide evidence to help others understand the issue"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Enhancement proposals get merged regularly"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'*   "pending" status on issue where no decision has been made\n'})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"No BDFL, committee instead (astropy has coordinating committee, numpy has a steering council)"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Enhancement proposal proposal Pull Request -- Jonathan"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Iterate for numpy like governance"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Blog post on conda-forge sprint -- Filipe"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"code of conduct"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Filipe has draft, please review\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"How do we handle those who misbehave (specified in document)"}),"\n",(0,o.jsx)(e.li,{children:"Submit as enhancement proposal, review after ~1 week submit"}),"\n",(0,o.jsx)(e.li,{children:"committee which will sit on code-of-conduct panel to act as nanny (perhaps some external)"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"contacting authors -- ping 4/5 active contributors to inform and ask if they want to contribute"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   do not add people to list of maintainers without permissions, let them add themselves in a pull request\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"add common snippets to docs so they are easier to find and used by others"}),"\n",(0,o.jsx)(e.li,{children:"John will add a generic comment to guidelines for contacting contributors via PR."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Lots of mention and excitement of conda-forge at SciPy"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*   Time-series on big packages mentioned at SciPy?\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Some questions on Nathan's whl talk"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Split gdal into libgdal and gdal like default has done, seem to have fixed issue"}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Next meeting 3 weeks from today, Aug 12th"}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>c});var i=s(96540);const o={},t=i.createContext(o);function r(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);