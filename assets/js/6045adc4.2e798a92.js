"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[12542],{71245:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"minutes/2024-04-17","title":"2024-04-17","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2024-04-17.md","sourceDirName":"minutes","slug":"/minutes/2024-04-17","permalink":"/community/minutes/2024-04-17","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2024-04-17.md","tags":[{"inline":true,"label":"meeting-notes","permalink":"/community/tags/meeting-notes"}],"version":"current","lastUpdatedAt":1738496915000,"frontMatter":{"tags":["meeting-notes"],"title":"2024-04-17"},"sidebar":"community","previous":{"title":"2024-05-01","permalink":"/community/minutes/2024-05-01"},"next":{"title":"2024-04-03","permalink":"/community/minutes/2024-04-03"}}');var t=s(74848),l=s(28453);const d={tags:["meeting-notes"],title:"2024-04-17"},c="conda-forge core meeting 2024-04-17",r={},o=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"conda-forge-core-meeting-2024-04-17",children:"conda-forge core meeting 2024-04-17"})}),"\n",(0,t.jsxs)(n.p,{children:["Add new agenda items under the ",(0,t.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://conda-forge.org/community/minutes/",children:"Previous meetings"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Initials"}),(0,t.jsx)(n.th,{children:"GitHub ID"}),(0,t.jsx)(n.th,{children:"Affiliation"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marcel Bargull"}),(0,t.jsx)(n.td,{children:"MB"}),(0,t.jsx)(n.td,{children:"mbargull"}),(0,t.jsx)(n.td,{children:"Bioconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Cheng H. Lee"}),(0,t.jsx)(n.td,{children:"CHL"}),(0,t.jsx)(n.td,{children:"chenghlee"}),(0,t.jsx)(n.td,{children:"Anaconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Nichita Morcotilo"}),(0,t.jsx)(n.td,{children:"NM"}),(0,t.jsx)(n.td,{children:"nichmor"}),(0,t.jsx)(n.td,{children:"prefix.dev"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Eric Dill"}),(0,t.jsx)(n.td,{children:"ED"}),(0,t.jsx)(n.td,{children:"ericdill"}),(0,t.jsx)(n.td,{children:"anaconda/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Dasha Gurova"}),(0,t.jsx)(n.td,{children:"DG"}),(0,t.jsx)(n.td,{children:"dashagurova"}),(0,t.jsx)(n.td,{children:"anaconda/conda"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Ralf Gommers"}),(0,t.jsx)(n.td,{children:"RG"}),(0,t.jsx)(n.td,{children:"rgommers"}),(0,t.jsx)(n.td,{children:"Quansight"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Klaus Zimmermann"}),(0,t.jsx)(n.td,{children:"KZ"}),(0,t.jsx)(n.td,{children:"zklaus"}),(0,t.jsx)(n.td,{children:"Quansight"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"John Kirkham"}),(0,t.jsx)(n.td,{children:"JK"}),(0,t.jsx)(n.td,{children:"jakirkham"}),(0,t.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"X people total"}),"\n",(0,t.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,t.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Finish compiler doc ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/pull/1950",children:"update"})," (open since a year)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["I'm trying to document the status quo, Isuru says it's a policy change --\x3e let's figure it out and make a choice together.\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Text has been restructured to discuss ABI breaking and non-ABI breaking changes in different sections; there is no actual policy change."}),"\n",(0,t.jsx)(n.li,{children:"(IF) In that case, we should be okay to merge."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["I'm waiting for this to add docs for ",(0,t.jsx)(n.code,{children:'{{ stdlib("c") }}'})," on top."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) stdlib migration status\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"based on some crude github searches, we're at ~250 migrated feedstocks out of ~5000 that are using a compiler"}),"\n",(0,t.jsxs)(n.li,{children:["Matthew suggested switching it on for the version migrator as well - I like this\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"There was areement that this is a good idea"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Downside is the migrator will fail (",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/librobometry-feedstock/pull/20#issuecomment-2041618340",children:"reason"}),") for recipes with templated output names (thankfully there are few of those, and even more rarely is it necessary)"]}),"\n",(0,t.jsxs)(n.li,{children:["What kind of percentage threshold do we want to achieve before bumping ",(0,t.jsx)(n.code,{children:"c_stdlib_version"}),"?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"See below"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Idea: despite being ABI-compatible, run an explicit compiler migration for ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/4890",children:"GCC 13 / LLVM 17"}),"; that way, we catch all feedstocks using ",(0,t.jsx)(n.code,{children:'{{ compiler("c|cxx" }}'})," with the piggyback.\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Would cause high CI load, and ultimately we decided we don't need to have every feedstock stdlib-enabled before bumping the versions, as long as the piggyback keep working into the future (and the linter thing below)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:['(IF/HV) Create a linter warning to saying something like "please add ',(0,t.jsx)(n.code,{children:"{{ stdlib }}"})," when using ",(0,t.jsx)(n.code,{children:"{{ compiler }}"}),'"']}),"\n",(0,t.jsxs)(n.li,{children:["TODOs:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Stop adding ",(0,t.jsx)(n.code,{children:"c_stdlib{,_version}"})," to ",(0,t.jsx)(n.code,{children:"always_keep_keys"})," in conda-smithy"]}),"\n",(0,t.jsxs)(n.li,{children:["Update CI of staged recipes (still using ",(0,t.jsx)(n.code,{children:"boa"}),", which limits conda-build to a too-old version)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) NumPy 2\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1997",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1997"})}),"\n",(0,t.jsxs)(n.li,{children:["ABI compatibility\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"NumPy will build Python packages with the oldest support NumPy for that Python version. The thinking is it won't be possible to run with an older NumPy version."}),"\n",(0,t.jsxs)(n.li,{children:["Meaning the ",(0,t.jsx)(n.code,{children:"pin_compatible"})," approach would go away"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["How do we upgrade?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When NumPy 2 comes out, most existing packages have a constraint to 1.x so. Maybe a handful need a repodata patch."}),"\n",(0,t.jsx)(n.li,{children:"Could add migrator for NumPy 2"}),"\n",(0,t.jsxs)(n.li,{children:["Piggyback migrator to remove ",(0,t.jsx)(n.code,{children:"pin_compatible"})," (as there is an existing ",(0,t.jsx)(n.code,{children:"run_exports"})," in NumPy already)"]}),"\n",(0,t.jsxs)(n.li,{children:["NumPy 2's ",(0,t.jsx)(n.code,{children:"run_exports"})," would have 1.22 (this needs to be fixed; easy to do)"]}),"\n",(0,t.jsx)(n.li,{children:"Would we want to start a migration using the NumPy 2 RC with a label (like what we did with Python 3.12)?"}),"\n",(0,t.jsxs)(n.li,{children:["Tricky to know what packages support NumPy 2\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Like Windows uses 64-bit ints now instead of 32-bit"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Release timeline for NumPy 2\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Chicken and egg: Projects need to adopt NumPy 2 to make it easier to release"}),"\n",(0,t.jsx)(n.li,{children:"Maybe mid-May"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (JK) Python 3.8 + crypt issues\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/scalene-feedstock/issues/41",children:"https://github.com/conda-forge/scalene-feedstock/issues/41"})}),"\n",(0,t.jsx)(n.li,{children:"(MB) Not a bug in general. Compiler packages should include the right flags to find header files from sysroot; failures typically expose issues in other places."}),"\n",(0,t.jsxs)(n.li,{children:["(IF) In this case, upstream build system is not properly using already-existing ",(0,t.jsx)(n.code,{children:"CXXFLAGS"}),". This is something that needs to be fixed in the upstream ",(0,t.jsx)(n.code,{children:"setup.py"})," & ",(0,t.jsx)(n.code,{children:"Makefile"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (WV) CEPs for rattler-build - looking for comments, discussion\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-incubator/ceps/pull/71",children:"Jinja functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-incubator/ceps/pull/70",children:"OCI storage"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-incubator/ceps/pull/74",children:"Recipe serialization"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (WV) R on Windows - revive?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(MB) Only loosely related: R 4.4 is going to be released in a couple of weeks (so people will have to look at R again in any case)"}),"\n",(0,t.jsx)(n.li,{children:"(IF) Needs major updates to MSYS2 (mostly done), UCRT64 (need gcc, binutils, sysroot)"}),"\n",(0,t.jsxs)(n.li,{children:["Related issues:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/r-base-feedstock/issues/248",children:"https://github.com/conda-forge/r-base-feedstock/issues/248"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1654",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1654"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/1044",children:"https://github.com/conda-forge/conda-forge.github.io/issues/1044"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (NM) PRs for rattler-build support\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Latest PR to ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-ci-setup-feedstock/pull/316",children:"conda-forge-ci-setup-feedstock"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (JK) GLIBC 2.28"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (WV) Big Windows machine - next steps?"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (FF) Conda-forge social media presence"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," (FF) NumFOCUS PoC and financial team members"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(96540);const t={},l=i.createContext(t);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);