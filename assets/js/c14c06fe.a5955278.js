"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[3661],{66498:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"minutes/2025-08-20","title":"2025-08-20","description":"Add new agenda items under the Your new() agenda items heading","source":"@site/community/minutes/2025-08-20.md","sourceDirName":"minutes","slug":"/minutes/2025-08-20","permalink":"/community/minutes/2025-08-20","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2025-08-20.md","tags":[{"inline":true,"label":"meeting-notes","permalink":"/community/tags/meeting-notes"}],"version":"current","lastUpdatedAt":1755725442000,"frontMatter":{"tags":["meeting-notes"],"title":"2025-08-20"},"sidebar":"community","previous":{"title":"Meeting minutes","permalink":"/community/minutes"},"next":{"title":"2025-08-06","permalink":"/community/minutes/2025-08-06"}}');var s=t(74848),r=t(28453);const o={tags:["meeting-notes"],title:"2025-08-20"},d="conda-forge core meeting 2025-08-20",l={},c=[{value:"Attendees",id:"attendees",level:2},{value:"Standing items",id:"standing-items",level:3},{value:"From previous meeting(s)",id:"from-previous-meetings",level:3},{value:"Active votes",id:"active-votes",level:3},{value:"Your <code>__new__()</code> agenda items",id:"your-__new__-agenda-items",level:3},{value:"Pushed to next meeting",id:"pushed-to-next-meeting",level:3},{value:"CFEPs",id:"cfeps",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"conda-forge-core-meeting-2025-08-20",children:"conda-forge core meeting 2025-08-20"})}),"\n",(0,s.jsxs)(n.p,{children:["Add new agenda items under the ",(0,s.jsx)(n.code,{children:"Your __new__() agenda items"})," heading"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://zoom.us/j/9138593505?pwd=SWh3dE1IK05LV01Qa0FJZ1ZpMzJLZz09",children:"Zoom link"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://dateful.com/convert/utc?t=5pm",children:"What time is the meeting in my time zone"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://conda-forge.org/community/minutes/",children:"Previous meetings"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Initials"}),(0,s.jsx)(n.th,{children:"GitHub ID"}),(0,s.jsx)(n.th,{children:"Affiliation"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Daniel Ching"}),(0,s.jsx)(n.td,{children:"DJC"}),(0,s.jsx)(n.td,{children:"@carterbox"}),(0,s.jsx)(n.td,{children:"NVIDIA/cf"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cheng H. Lee"}),(0,s.jsx)(n.td,{children:"CHL"}),(0,s.jsx)(n.td,{children:"chenghlee"}),(0,s.jsx)(n.td,{children:"Anaconda/cf"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Dan Yeaw"}),(0,s.jsx)(n.td,{children:"DWY"}),(0,s.jsx)(n.td,{children:"@danyeaw"}),(0,s.jsx)(n.td,{children:"Anaconda"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Isuru Fernando"}),(0,s.jsx)(n.td,{children:"IF"}),(0,s.jsx)(n.td,{children:"@isuruf"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Axel Obermeier"}),(0,s.jsx)(n.td,{children:"HV"}),(0,s.jsx)(n.td,{children:"@h-vetinari"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Wolf Vollprecht"}),(0,s.jsx)(n.td,{children:"WV"}),(0,s.jsx)(n.td,{children:"@wolfv"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"John Kirkham"}),(0,s.jsx)(n.td,{children:"JK"}),(0,s.jsx)(n.td,{children:"@jakirkham"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"X people total"}),"\n",(0,s.jsx)(n.h3,{id:"standing-items",children:"Standing items"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"from-previous-meetings",children:"From previous meeting(s)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"active-votes",children:"Active votes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"your-__new__-agenda-items",children:["Your ",(0,s.jsx)(n.code,{children:"__new__()"})," agenda items"]}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Drop python 3.9, close 3.13 migration, migrate for 3.14.0rc2 (in line with what we did for 3.13 & 3.12)\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7661",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7661"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7648",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7648"})}),"\n",(0,s.jsx)(n.li,{children:"(JK) Let's put dates so it's clear on the web page"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Drop CUDA on PPC: ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7660",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7660"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Upstream dropped PPC support in CUDA 12.5"}),"\n",(0,s.jsxs)(n.li,{children:["(IF) Should retain ability to add it back on a per-recipe basis\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"(HV) We can reuse the 11.x migrator tooling to add it back"}),"\n",(0,s.jsxs)(n.li,{children:["(HV) We can do on-demand 12.4 migrator, ",(0,s.jsx)(n.em,{children:"if there's demand"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["(JK) PPC support generally? (HV) Discussion ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/2510",children:"issue"})," for that"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Start migration for CUDA 13.0\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Question about timing w.r.t. 12.9 migrator; IMO not a big deal to do it while 12.9 is still running because we'll have to support both CUDA 12.x and 13.x for the foreseeable future anyway (CUDA 13 also drops several gpu arches, so only way to support those is on CUDA 12)"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7653",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/7653"})}),"\n",(0,s.jsx)(n.li,{children:"Will have two default CUDA versions, as CUDA 13.0 drops support for older GPU architectures"}),"\n",(0,s.jsxs)(n.li,{children:["(DJC) All Windows packages are broken because of DLL placement; what is the best option?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DLL locations changed to support Windows on ARM"}),"\n",(0,s.jsx)(n.li,{children:"(IF) Could create stub DLLs to redirect to actual locations"}),"\n",(0,s.jsx)(n.li,{children:"(IF) Similar situation with m2 binaries on Windows"}),"\n",(0,s.jsx)(n.li,{children:"(WV) Directory Forks might also work"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Possible ",(0,s.jsx)(n.a,{href:"https://github.com/conda/ceps/issues/77#issuecomment-3186740038",children:"design"}),' for "host-exports", along with an overhaul of run-export machinery.\n',(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Positive feedback from Prefix, would appreciate input from Anaconda"}),"\n",(0,s.jsxs)(n.li,{children:["Unclear (to me) impact on repodata; might need to piggyback on Repodata v2 ",(0,s.jsx)(n.a,{href:"https://github.com/conda/ceps/pull/111",children:"effort"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Needed, e.g., to help feedstock maintainers avoid foot guns with compiler-related ABI compatibilties"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Nogil migration plans\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We never got around to ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/6673",children:"migrating"})," 3.13t at scale; key dependencies were missing, e.g. cffi. As it turns out, cffi will never support 3.13t due to CPython bugs, but 3.14t is looking much better (and also not experimental anymore)"]}),"\n",(0,s.jsx)(n.li,{children:"We could start migrating at the end of the year, after the dust has settled on the 3.14 migration."}),"\n",(0,s.jsxs)(n.li,{children:["(CHL) Anaconda added the ",(0,s.jsx)(n.code,{children:"python_abi"})," package to ",(0,s.jsx)(n.code,{children:"main"})," with for ",(0,s.jsx)(n.code,{children:"python >=3.13"}),". Will build a free-threading Python 3.14 interpreter when it hits GA, but we likely won't start building free-threading packages until we have enough of a handle on the non-free-threading variants."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Exceptionally delete some very broken libprotobuf builds\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["automerge bot got ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/libprotobuf-feedstock/pull/112/files",children:"caught"})," by a brutal change in the upstream version scheme, which removed the major version from the tags (because the protobuf major version is now ",(0,s.jsx)(n.em,{children:"per language bindings"}),"). The major-less ",(0,s.jsx)(n.a,{href:"https://anaconda.org/conda-forge/libprotobuf/files?version=21.5",children:"builds"})," have never been used beyond accidental installs (because we never migrated for that)."]}),"\n",(0,s.jsxs)(n.li,{children:["even though they're marked broken, their presence creates persistent user confusion & frustration:\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/libprotobuf-feedstock/issues/262",children:"https://github.com/conda-forge/libprotobuf-feedstock/issues/262"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/libprotobuf-feedstock/issues/172",children:"https://github.com/conda-forge/libprotobuf-feedstock/issues/172"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/libprotobuf-feedstock/issues/122",children:"https://github.com/conda-forge/libprotobuf-feedstock/issues/122"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/protobuf-feedstock/issues/182",children:"https://github.com/conda-forge/protobuf-feedstock/issues/182"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"IMO this all is a good enough reason to make an exception and outright delete them."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (DJC) arm-variant repodata patches\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Want to patch all existing aarch64 packages built by NVCC so arm-variant=sbsa is a dependency"}),"\n",(0,s.jsxs)(n.li,{children:["@isuruf ",(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/467#issuecomment-1580256486",children:"has said in the past"})," that patching in new dependencies is bad practice\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Users get confusing warning from conda when mutating exisiting environment because conda cannot figure out how it got into a state where exisiting package requirements were not satisfied"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/1059",children:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/1059"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/973",children:"https://github.com/conda-forge/conda-forge-repodata-patches-feedstock/pull/973"})}),"\n",(0,s.jsxs)(n.li,{children:["run_constrains should be sufficient to avoid tegra users from getting old sbsa packages because opting into tegra ",(0,s.jsx)(n.em,{children:"requires"})," installing arm-variant and all tegra packages already require arm-variant, so installing any tegra package would exclude any exisiting sbsa packages"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," (HV) Migrate build scripts from batch to powershell long-term?\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It would be great if conda-build and rattler-build would accept build.ps1 instead of only bld.bat"}),"\n",(0,s.jsx)(n.li,{children:"(WV) Powershell is already accepted by rattler-build"}),"\n",(0,s.jsx)(n.li,{children:"(CHL) Anaconda wants to do this, but a lot of enterprises don't let you run unsigned powershell files"}),"\n",(0,s.jsx)(n.li,{children:"(IF) Would be nice if build tools supported bash on Windows so there only needed to be one script for all platforms"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pushed-to-next-meeting",children:"Pushed to next meeting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cfeps",children:"CFEPs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[ ]"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);