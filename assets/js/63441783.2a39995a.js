"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[55721],{42609:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"minutes/2018-11-13","title":"2018-11-13","description":"Pinned Items","source":"@site/community/minutes/2018-11-13.md","sourceDirName":"minutes","slug":"/minutes/2018-11-13","permalink":"/community/minutes/2018-11-13","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2018-11-13.md","tags":[],"version":"current","lastUpdatedAt":1749817794000,"frontMatter":{"title":"2018-11-13"},"sidebar":"community","previous":{"title":"2018-11-27","permalink":"/community/minutes/2018-11-27"},"next":{"title":"2018-10-30","permalink":"/community/minutes/2018-10-30"}}');var t=s(74848),o=s(28453);const r={title:"2018-11-13"},c="2018-11-13 conda-forge meeting",l={},d=[];function a(n){const e={a:"a",code:"code",del:"del",h1:"h1",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"2018-11-13-conda-forge-meeting",children:"2018-11-13 conda-forge meeting"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Pinned Items"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Zoom instructions: ",(0,t.jsx)(e.a,{href:"https://paper.dropbox.com/doc/How-to-connect-to-zoom-odl94oveHyiRv6UqTtZE5",children:"+How to connect to zoom"})]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"New items"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.del,{children:"Discussing binary size and stripping options ("}),(0,t.jsx)(e.code,{children:"~~-S~~"}),(0,t.jsx)(e.del,{children:","})," ",(0,t.jsx)(e.code,{children:"~~-s~~"}),(0,t.jsx)(e.del,{children:","})," ",(0,t.jsx)(e.code,{children:"~~-0s~~"}),(0,t.jsx)(e.del,{children:")"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Solved. Not worth pursuing and the recommend is to strip after if space is an issue."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Previous items"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Compiler rebuild status\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"python done for both compiler stacks"}),"\n",(0,t.jsx)(e.li,{children:"Qt: try to build on Azure?"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["(DISCUSSED/Postponed) New approach to reducing CI load ",(0,t.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/647",children:"https://github.com/conda-forge/conda-forge.github.io/issues/647"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Might be possible to not be totally insecure with work. But nobody is volunteering to do that work right now. :)"}),"\n",(0,t.jsx)(e.li,{children:"Pushing PR builds to a staging channel might be a nice UX improvement so you can test anyway."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["Copying packages to gcc7 label ",(0,t.jsx)(e.a,{href:"https://github.com/conda-forge/conda-smithy/issues/892",children:"https://github.com/conda-forge/conda-smithy/issues/892"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"MPI metapackage"}),"\n",(0,t.jsx)(e.li,{children:"Just wait for new conda 4.6 with strict channel priority, and then add main label to those builds"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["(DISCUSSED/Postponed)Mergify = auto-merge version bump PRs when CIs pass?\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-maintenance/issues/49",children:"https://github.com/conda-forge/conda-forge-maintenance/issues/49"})}),"\n",(0,t.jsx)(e.li,{children:"Worry about bot not detecting dependency changes"}),"\n",(0,t.jsx)(e.li,{children:"Definitely opt-in only at first"}),"\n",(0,t.jsx)(e.li,{children:'One possibility: only after an approved review (so you can say "merge assuming CIs pass")'}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"Add overlinking error flag by default?"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>c});var i=s(96540);const t={},o=i.createContext(t);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);