"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[32684],{7348:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"minutes/2018-07-17","title":"2018-07-17","description":"Pinned Items","source":"@site/community/minutes/2018-07-17.md","sourceDirName":"minutes","slug":"/minutes/2018-07-17","permalink":"/community/minutes/2018-07-17","draft":false,"unlisted":false,"editUrl":"https://github.com/conda-forge/conda-forge.github.io/tree/refs/heads/main/community/minutes/2018-07-17.md","tags":[],"version":"current","lastUpdatedAt":1739781048000,"frontMatter":{"title":"2018-07-17"},"sidebar":"community","previous":{"title":"2018-07-24","permalink":"/community/minutes/2018-07-24"},"next":{"title":"2018-06-26","permalink":"/community/minutes/2018-06-26"}}');var t=i(74848),r=i(28453);const o={title:"2018-07-17"},l="2018-07-17 conda-forge meeting",c={},a=[];function d(e){const n={a:"a",del:"del",h1:"h1",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2018-07-17-conda-forge-meeting",children:"2018-07-17 conda-forge meeting"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Pinned Items"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Zoom instructions: ",(0,t.jsx)(n.a,{href:"https://paper.dropbox.com/doc/How-to-connect-to-zoom-odl94oveHyiRv6UqTtZE5",children:"+How to connect to zoom"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"New items"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Finalize compiler migration discussion (see: ",(0,t.jsx)(n.a,{href:"https://paper.dropbox.com/doc/2018-07-17-conda-forge-meeting-DbS8FTAlF94QgFO7SoRkk",children:"+2018-07-17 conda-forge meeting"})," )\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Update on current status\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Number of packages left to syntax migrate"}),"\n",(0,t.jsxs)(n.li,{children:["Number of packages needing re-compile\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Total number ready"}),"\n",(0,t.jsx)(n.li,{children:"Number ready in the first layer"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Build number increase by N for new things at build time non static\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"determine build number with conda render clobber file"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Decide on migration order [Outcome: make super graph of py37 + compilers (run with one walker), drop 3.5 when 3.7 starts]\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"py37"}),"\n",(0,t.jsx)(n.li,{children:"compilers"}),"\n",(0,t.jsx)(n.li,{children:"remaining compiler syntax"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Decide on resource strat [Outcome: do everything online]\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.del,{children:"Offline (without CIs)"})}),"\n",(0,t.jsx)(n.li,{children:"Online (with CI)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Decide on channel strat [Outcome: new label for new compilers, run two labels]\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"upload re-compiled packages to new label and continue pushing to current label"}),"\n",(0,t.jsx)(n.li,{children:"upload re-compiled packages to current label, push updates to current era compilers to different branch"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Establish next steps/action items/gh issues"}),"\n",(0,t.jsx)(n.li,{children:"Decide on a policy for when maintainers stop maintaining"}),"\n",(0,t.jsx)(n.li,{children:"Related to 2k-ish pending bot PRs\u2026"}),"\n",(0,t.jsx)(n.li,{children:"Sharing passwords (to start off the meeting next time)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Existing Items"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Moving compiler syntax\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Decide on strat"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Finding a good solution to sharing passwords among core\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Secret? ",(0,t.jsx)(n.a,{href:"https://github.com/sobolevn/git-secret",children:"https://github.com/sobolevn/git-secret"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Run_exports etc: ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/58",children:"https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/58"})]}),"\n",(0,t.jsxs)(n.li,{children:["Michael Sarahan to document and give demo on how to transition old recipes to new style\n- ",(0,t.jsx)(n.a,{href:"https://github.com/conda-forge/AnacondaRecipesSync",children:"https://github.com/conda-forge/AnacondaRecipesSync"}),"\n- 5/1: Will wait for more people on the dev call before Mike talks about this"]}),"\n",(0,t.jsxs)(n.li,{children:["Build packages on C3I and upload to conda-forge\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make is missing from the base image for PowerPC internal to Anaconda. Fun times!"}),"\n",(0,t.jsx)(n.li,{children:"Mike is open to other people helping with this.  If interested, reach out!  Helping means trying recipes, debugging any issues, and resolving any merge conflicts that have happened since Mike pulled them in last.  Moving target."}),"\n",(0,t.jsxs)(n.li,{children:["Packages that have been built ",(0,t.jsx)(n.a,{href:"https://anaconda.org/cf-cb3",children:"https://anaconda.org/cf-cb3"})," - these may need more work regarding versions.  The graph was computed with the versions, but probably should have ignored them.  When a pin is older than a newer recipe, the upstream recipe gets missed as a real dependency because of the version mismatch."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["switch to cb3\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["what kind of things are going to break when we change compilers?\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"(@Jonathan H had a great response that I hope he\u2019ll clarify here:) tl;dr C++ ABI"}),"\n",(0,t.jsxs)(n.li,{children:["Some details on libstdc++ dual ABI, ",(0,t.jsx)(n.a,{href:"https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html",children:"https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Making the agenda and notes public again.\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"John will see if we can make dropbox paper readable by the world"}),"\n",(0,t.jsx)(n.li,{children:"other options are to just post the notes somewhere public after the meeting"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"conda-forge blog"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Discussed Items"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Done"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);